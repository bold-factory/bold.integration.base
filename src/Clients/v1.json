{
  "openapi": "3.0.1",
  "info": {
    "title": "Bold API",
    "description": "An ASP.NET Core Web API for Bold Factory",
    "termsOfService": "https://bold-factory.com/terms-of-service",
    "contact": {
      "name": "Contact",
      "url": "https://bold-factory.com/contact",
      "email": "support@bold-factory.com"
    },
    "version": "1.0"
  },
  "paths": {
    "/v1/analytics/reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get all existing reports",
        "description": "Requires `Production.Analytics.Read` privileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Analytics.Responses.ReportResponse]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Create a report",
        "description": "Requires `Production.Analytics.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Analytics.Requests.CreateReportRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Analytics.Responses.ReportResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/analytics/reports/{id}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get one report by its reference",
        "description": "Requires `Production.Analytics.Read` privileges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Analytics.Responses.TokenizedReportResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "summary": "Delete an existing report",
        "description": "Requires `Production.Analytics.Write` privileges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/analytics/reports/{id}/clone": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Clone a report",
        "description": "Requires `Production.Analytics.Write` privileges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Analytics.Requests.CloneReportRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Analytics.Responses.ReportResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/files": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Get all existing files (paginated)",
        "description": "Requires `Files.Files.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Files.Responses.FileMetadataResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Upload a new file",
        "description": "Requires `Files.Files.Upload` privileges",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "formFile": {
                    "required": [
                      "contentType",
                      "contentDisposition",
                      "headers",
                      "length",
                      "name",
                      "fileName"
                    ],
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "formFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Files.Responses.FileMetadataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/files/{id}": {
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Delete an existing file",
        "description": "Requires `Files.Files.Delete` privileges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all existing products (paginated)",
        "description": "Requires `Items.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Items.Products.Responses.ProductResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new product",
        "description": "Requires `Items.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Products.Requests.CreateProductRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Products.Responses.ProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/products/{productReference}": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Edit an existing product",
        "description": "Requires `Items.Write` privileges",
        "parameters": [
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "code"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Products.Requests.UpdateProductRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete an existing product",
        "description": "Requires `Items.Write` privileges",
        "parameters": [
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get one product by its reference",
        "description": "Requires `Items.Read` privileges",
        "parameters": [
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Products.Responses.ProductResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/products/{productReference}/planning": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get the stock details for one product by its reference",
        "description": "Requires `Planning.Skus.Read` privileges",
        "parameters": [
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.Products.Responses.ProductResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/products/{productReference}/properties": {
      "get": {
        "tags": [
          "Product Properties"
        ],
        "summary": "Get all properties assigned to a specific product",
        "description": "Requires `Items.Products.Read` privileges",
        "parameters": [
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Items.Products.Responses.ProductPropertyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Product Properties"
        ],
        "summary": "Assign a new property to a product",
        "description": "Requires `Items.Products.Write` privileges",
        "parameters": [
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "propertyReference",
                  "required"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Products.Requests.CreateAssignmentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Products.Responses.ProductPropertyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/products/{productReference}/properties/{propertyReference}": {
      "put": {
        "tags": [
          "Product Properties"
        ],
        "summary": "Edit the assignment of a property to a product",
        "description": "Requires `Items.Products.Write` privileges",
        "parameters": [
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "required"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Products.Requests.UpdateAssignmentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Product Properties"
        ],
        "summary": "Remove the assignment of a property to a product",
        "description": "Requires `Items.Products.Write` privileges",
        "parameters": [
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Product Properties"
        ],
        "summary": "Get the assignment of a property to a product",
        "description": "Requires `Items.Products.Read` privileges",
        "parameters": [
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Products.Responses.ProductPropertyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/products/{productReference}/skus": {
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Get all SKUs for a product (paginated)",
        "description": "Requires `Items.Variants.Read` privileges",
        "parameters": [
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Items.Skus.Responses.SkuResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "SKUs"
        ],
        "summary": "Create a new SKU",
        "description": "Requires `Items.Variants.Write` privileges",
        "parameters": [
          {
            "name": "productReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Skus.Requests.CreateSkuForProductRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Skus.Responses.SkuResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/products/planning": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get the stock aggregations for existing products (paginated)",
        "description": "Requires `Planning.Skus.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Planning.Products.Responses.ProductResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/properties": {
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Get all existing properties (paginated)",
        "description": "Requires `Items.Properties.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Items.Properties.Responses.PropertyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Properties"
        ],
        "summary": "Create a new property",
        "description": "Requires `Items.Properties.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "kind"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Properties.Requests.CreatePropertyRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Properties.Responses.PropertyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/properties/{propertyReference}": {
      "put": {
        "tags": [
          "Properties"
        ],
        "summary": "Update an existing property",
        "description": "Requires `Items.Properties.Write` privileges",
        "parameters": [
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Properties.Requests.UpdatePropertyRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Properties"
        ],
        "summary": "Delete an existing property",
        "description": "Requires `Items.Properties.Write` privileges",
        "parameters": [
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Get an existing property",
        "description": "Requires `Items.Properties.Read` privileges",
        "parameters": [
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Properties.Responses.PropertyResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/properties/{propertyReference}/options": {
      "get": {
        "tags": [
          "Property Options"
        ],
        "summary": "Get all the options of a property",
        "description": "Requires `Items.Properties.Read` privileges",
        "parameters": [
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Items.Properties.Responses.OptionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Property Options"
        ],
        "summary": "Add an option to a property",
        "description": "Requires `Items.Properties.Write` privileges",
        "parameters": [
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Properties.Requests.AddOptionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Properties.Responses.OptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/properties/{propertyReference}/options/{optionReference}": {
      "put": {
        "tags": [
          "Property Options"
        ],
        "summary": "Edit option of a property",
        "description": "Requires `Items.Properties.Write` privileges",
        "parameters": [
          {
            "name": "optionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Properties.Requests.UpdateOptionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Property Options"
        ],
        "summary": "Delete an option of a property",
        "description": "Requires `Items.Properties.Write` privileges",
        "parameters": [
          {
            "name": "optionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Property Options"
        ],
        "summary": "Get an option of a property",
        "description": "Requires `Items.Properties.Read` privileges",
        "parameters": [
          {
            "name": "optionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Properties.Responses.OptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/properties/{propertyReference}/products": {
      "get": {
        "tags": [
          "Product Properties"
        ],
        "summary": "Get all products assigned to a specific property",
        "description": "Requires `Items.Products.Read` privileges",
        "parameters": [
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Items.Products.Responses.ProductPropertyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus": {
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Get all SKUs (paginated)",
        "description": "Requires `Items.Variants.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Items.Skus.Responses.SkuResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "SKUs"
        ],
        "summary": "Create a new SKU",
        "description": "Requires `Items.Variants.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Skus.Requests.CreateSkuRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Skus.Responses.SkuResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{removeReference}/merge/{remainReference}": {
      "post": {
        "tags": [
          "SKUs"
        ],
        "summary": "Merges two SKUs that are the same, the first one being deleted",
        "description": "Requires `Items.Variants.Write` privileges",
        "parameters": [
          {
            "name": "removeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remainReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Skus.Responses.SkuResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}": {
      "put": {
        "tags": [
          "SKUs"
        ],
        "summary": "Edits an existing SKU",
        "description": "Requires `Items.Variants.Write` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "productReference",
                  "code",
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Skus.Requests.UpdateSkuRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SKUs"
        ],
        "summary": "Deletes an existing SKU",
        "description": "Requires `Items.Variants.Write` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Gets an existing SKU",
        "description": "Requires `Items.Variants.Read` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Skus.Responses.SkuResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/activeOrders": {
      "get": {
        "tags": [
          "Production Orders"
        ],
        "summary": "Get the active orders for a given SKU",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Orders.Responses.OrderResponse]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/demand/{demandId}/batched": {
      "post": {
        "tags": [
          "SKUs"
        ],
        "summary": "Updates the mode of a demand of the sku to batched allocation",
        "description": "Requires `Planning.Skus.Write` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "demandId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/demand/{demandId}/direct": {
      "post": {
        "tags": [
          "SKUs"
        ],
        "summary": "Updates the mode of a demand of the sku to direct allocation",
        "description": "Requires `Planning.Skus.Write` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "demandId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/duplicates": {
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Gets the duplicates for an existing SKU",
        "description": "Requires `Items.Variants.Read` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Skus.Responses.DuplicatesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/inputs": {
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Get the theoretical inputs required to manufacture this sku",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Skus.Responses.RequiredInputResponse]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/missingInputs/{recipeReference}": {
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Get the SKUs that would be required to manufacture this SKU but do not exist",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Skus.Responses.MissingInputResponse]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/planning": {
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Get one SKU by its reference",
        "description": "Requires `Planning.Skus.Read` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.Skus.Responses.SkuResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "SKUs"
        ],
        "summary": "Updates the planning info of the sku",
        "description": "Requires `Planning.Skus.Write` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "safetyStock",
                  "reorderPoint",
                  "minimumAmount",
                  "amountMultiple",
                  "mode",
                  "source"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.Skus.Requests.UpdateSkuPlanningInfoRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/recipes": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get all valid recipes for a given SKU",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Recipes.Responses.RecipeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/stock": {
      "put": {
        "tags": [
          "SKUs"
        ],
        "summary": "Updates the stock of the sku in a given location",
        "description": "Requires `Warehouse.Skus.Write` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "locationReference",
                  "stock",
                  "lotNumber"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Warehouse.Skus.Requests.AdjustSkuStockRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Gets the stock of the sku",
        "description": "Requires `Warehouse.Skus.Write` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Skus.Responses.SkuResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/stock/history": {
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Gets the stock history of the sku",
        "description": "Requires `Warehouse.Skus.Write` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Skus.Responses.SkuHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/stock/units": {
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Gets the detailed stock units of the sku",
        "description": "Requires `Warehouse.Skus.Write` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Warehouse.Skus.Responses.StockUnitResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/values": {
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Get all properties and its values for a given SKU",
        "description": "Requires `Items.Variants.Read` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Items.Skus.Responses.ValueResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "SKUs"
        ],
        "summary": "Create a new property value for a given SKU",
        "description": "Your value must correspond to the property data type.\n\n If the type is `Decimal`, please use point as decimal separator and comma or nothing as group separator.\n\n If the type is `Integer`, please use comma or nothing as group separator.\n\n If the type is `DateTime`, please use `YYYY-MM-dd hh:mm:ss zzz` as format, where zzz is the offset with UTC.\n\n If the type is `Boolean`, please send `true` or `false`.\n\n If the type is `Enum`, please send a valid option reference.\n\nRequires `Items.ItemVariants.Write` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "propertyReference",
                  "value"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Skus.Requests.AddValueRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Skus.Responses.ValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/{skuReference}/values/{propertyReference}": {
      "put": {
        "tags": [
          "SKUs"
        ],
        "summary": "Updates an existing property value for a given SKU",
        "description": "Your value must correspond to the property data type.\n\n If the type is `Decimal`, please use point as decimal separator and comma or nothing as group separator.\n\n If the type is `Integer`, please use comma or nothing as group separator.\n\n If the type is `DateTime`, please use `YYYY-MM-dd hh:mm:ss zzz` as format, where zzz is the offset with UTC.\n\n If the type is `Boolean`, please send `true` or `false`.\n\n If the type is `Enum`, please send a valid option reference.\n\nRequires `Items.ItemVariants.Write` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "value"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Skus.Requests.UpdateValueRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SKUs"
        ],
        "summary": "Deletes an existing property value for a given SKU",
        "description": "Requires `Items.Variants.Write` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Gets the value for a given SKU and property",
        "description": "Requires `Items.Variants.Read` privileges",
        "parameters": [
          {
            "name": "skuReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items.Skus.Responses.ValueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/forecast": {
      "post": {
        "tags": [
          "SKUs"
        ],
        "summary": "Recalculates a forecast for all SKUs",
        "description": "Requires `App.SuperAdmin` privileges",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/planning": {
      "get": {
        "tags": [
          "SKUs"
        ],
        "summary": "Get all existing SKUs (paginated)",
        "description": "Requires `Planning.Skus.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Planning.Skus.Responses.SkuResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/items/skus/search": {
      "post": {
        "tags": [
          "SKUs"
        ],
        "summary": "Search for SKUs by its values (paginated)",
        "description": "Requires `Items.Variants.Read` privileges",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "productReference",
                  "filters"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items.Skus.Requests.SearchSkusByValuesRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Items.Skus.Responses.SkuResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/labels/templates": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Get all existing templates (paginated)",
        "description": "Requires `Labels.Templates.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Labels.Responses.TemplateResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Create a new template",
        "description": "Requires `Labels.Templates.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "type",
                  "width",
                  "height"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Labels.Requests.CreateTemplateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Labels.Responses.TemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/labels/templates/{id}": {
      "delete": {
        "tags": [
          "Labels"
        ],
        "summary": "Delete an existing template",
        "description": "Requires `Labels.Templates.Write` privileges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Get one template by its reference",
        "description": "Requires `Labels.Templates.Read` privileges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Labels.Responses.TemplateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/labels/templates/{templateId}/elements": {
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Add a new element in the template",
        "description": "Requires `Labels.Templates.Write` privileges",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "type"
                ],
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Labels.Commands.ShapeElement"
                  },
                  {
                    "$ref": "#/components/schemas/Labels.Commands.FixedTextElement"
                  },
                  {
                    "$ref": "#/components/schemas/Labels.Commands.VariableTextElement"
                  },
                  {
                    "$ref": "#/components/schemas/Labels.Commands.QrCodeElement"
                  },
                  {
                    "$ref": "#/components/schemas/Labels.Commands.BarcodeElement"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id",
                    "x",
                    "y",
                    "type"
                  ],
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Labels.Responses.ShapeElementResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Labels.Responses.FixedTextElementResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Labels.Responses.VariableTextElementResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Labels.Responses.QrCodeElementResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Labels.Responses.BarcodeElementResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/labels/templates/{templateId}/elements/{elementId}": {
      "delete": {
        "tags": [
          "Labels"
        ],
        "summary": "Remove an existing element within the template",
        "description": "Requires `Labels.Templates.Write` privileges",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "elementId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Labels"
        ],
        "summary": "Update an existing element within the template",
        "description": "Requires `Labels.Templates.Read` privileges",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "elementId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "type"
                ],
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Labels.Commands.ShapeElement"
                  },
                  {
                    "$ref": "#/components/schemas/Labels.Commands.FixedTextElement"
                  },
                  {
                    "$ref": "#/components/schemas/Labels.Commands.VariableTextElement"
                  },
                  {
                    "$ref": "#/components/schemas/Labels.Commands.QrCodeElement"
                  },
                  {
                    "$ref": "#/components/schemas/Labels.Commands.BarcodeElement"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/app": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get all app notifications",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notifications.App.Responses.NotificationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/app/{id}/read": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Mark an app notification as read",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/app/{id}/unread": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Mark an app notification as not read",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/app/read": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Mark all app notifications as read",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/app/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get all subscriptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Notifications.App.Responses.SubscriptionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/app/subscriptions/{eventName}": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Subscribe to an event",
        "parameters": [
          {
            "name": "eventName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notifications.App.Responses.SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Unsubscribe from an event",
        "parameters": [
          {
            "name": "eventName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/email/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get all email subscriptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Notifications.Emails.Responses.SubscriptionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/email/subscriptions/{eventName}": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Subscribe to an event",
        "parameters": [
          {
            "name": "eventName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notifications.Emails.Responses.SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Unsubscribe from an event",
        "parameters": [
          {
            "name": "eventName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get all valid events by name",
        "description": "Requires `App.Access` privileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Notifications.Events.Responses.EventDefinitionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/events/versions": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get all valid events by name and version",
        "description": "Requires `App.Access` privileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Notifications.Events.Responses.VersionedEventDefinitionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/webhook": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Search for webhook notifications (paginated)",
        "description": "Requires `App.Admin` privileges",
        "parameters": [
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Notifications.Webhooks.Responses.NotificationResponse]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/webhook/{id}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get one webhook notification",
        "description": "Requires `App.Admin` privileges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notifications.Webhooks.Responses.NotificationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/webhook/{id}/attempts": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get the attempts of one notification",
        "description": "Requires `App.Admin` privileges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Notifications.Webhooks.Responses.NotificationAttemptResponse]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/webhook/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Search for all existing subscriptions (paginated)",
        "description": "Requires `App.Admin` privileges",
        "parameters": [
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Notifications.Webhooks.Responses.SubscriptionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Create a new subscription",
        "description": "Requires `App.Admin` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "endpoint",
                  "eventName",
                  "eventVersion"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Notifications.Webhooks.Requests.SubscribeRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notifications.Webhooks.Responses.SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/notifications/webhook/subscriptions/{id}": {
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Delete a subscription",
        "description": "Requires `App.Admin` privileges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get all existing customers (paginated)",
        "description": "Requires `Planning.Customers.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Planning.Customers.Responses.CustomerResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create a new customer",
        "description": "Requires `Planning.Customers.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.Customers.Requests.CreateCustomerRequest"
                  }
                ]
              },
              "example": {
                "name": "Acme Corp",
                "externalReference": "REF123456"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.Customers.Responses.CustomerResponse"
                },
                "example": {
                  "id": "cus_1ke0e3bm05298c28",
                  "externalReference": "CLI0007",
                  "name": "Industrias Manolito",
                  "createdAt": "2024-01-10T09:08:17.3284938+00:00",
                  "createdBy": "Timoteo.Ruelas48@example.com",
                  "lastModifiedAt": "2024-09-10T09:00:35.3797939+00:00",
                  "lastModifiedBy": "MariaCristina_Collazo@example.org"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/customers/{customerReference}": {
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Edit an existing customer",
        "description": "Requires `Planning.Customers.Write` privileges",
        "parameters": [
          {
            "name": "customerReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.Customers.Requests.UpdateCustomerRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete an existing customer",
        "description": "Requires `Planning.Customers.Write` privileges",
        "parameters": [
          {
            "name": "customerReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get one customer by its reference",
        "description": "Requires `Planning.Customers.Read` privileges",
        "parameters": [
          {
            "name": "customerReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.Customers.Responses.CustomerResponse"
                },
                "example": {
                  "id": "cus_1ke0e3b495dchmu3",
                  "externalReference": "CLI0007",
                  "name": "Industrias Manolito",
                  "createdAt": "2023-10-18T02:21:42.6630945+00:00",
                  "createdBy": "Beatriz69@example.com",
                  "lastModifiedAt": "2024-09-09T22:25:10.5090711+00:00",
                  "lastModifiedBy": "Ruben5@example.org"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/purchaseOrderLines": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Get all existing lines (paginated)",
        "description": "Requires `Planning.PurchaseOrders.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Planning.PurchaseOrders.Responses.PurchaseOrderLineResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/purchaseOrderLines/{lineReference}": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Get one Purchase Order Line by its reference",
        "description": "Requires `Planning.PurchaseOrders.Read` privileges",
        "parameters": [
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.PurchaseOrders.Responses.PurchaseOrderLineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/purchaseOrders": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Get all existing orders (paginated)",
        "description": "Requires `Planning.PurchaseOrders.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Planning.PurchaseOrders.Responses.PurchaseOrderResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Create a new purchase order",
        "description": "Requires `Planning.PurchaseOrders.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "supplierReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.PurchaseOrders.Requests.CreatePurchaseOrderRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.PurchaseOrders.Responses.PurchaseOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/purchaseOrders/{orderReference}": {
      "put": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Edit an existing Purchase Order",
        "description": "Requires `Planning.PurchaseOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "supplierReference",
                  "code",
                  "name",
                  "notes"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.PurchaseOrders.Requests.UpdatePurchaseOrderRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Delete an existing Purchase Order and its lines",
        "description": "Requires `Planning.PurchaseOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Get one Purchase Order Line by its reference",
        "description": "Requires `Planning.PurchaseOrders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.PurchaseOrders.Responses.PurchaseOrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/purchaseOrders/{orderReference}/lines": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Get all lines for an order",
        "description": "Requires `Planning.PurchaseOrders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Planning.PurchaseOrders.Responses.PurchaseOrderLineResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Create a new purchase order line",
        "description": "Requires `Planning.PurchaseOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "skuReference",
                  "quantity"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.PurchaseOrders.Requests.CreatePurchaseOrderLineRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.PurchaseOrders.Responses.PurchaseOrderLineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/purchaseOrders/{orderReference}/lines/{lineReference}": {
      "put": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Edit an existing Purchase Order Line",
        "description": "Requires `Planning.PurchaseOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "quantity",
                  "notes",
                  "expectedAt"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.PurchaseOrders.Requests.UpdatePurchaseOrderLineRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Delete an existing Purchase Order Line",
        "description": "Requires `Planning.PurchaseOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Get one Purchase Order Line by its reference",
        "description": "Requires `Planning.PurchaseOrders.Read` privileges",
        "parameters": [
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.PurchaseOrders.Responses.PurchaseOrderLineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/purchaseOrders/lines": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Get all existing lines (paginated)",
        "description": "Requires `Planning.PurchaseOrders.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Planning.PurchaseOrders.Responses.PurchaseOrderLineResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/purchaseOrders/lines/{lineReference}": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Get one Purchase Order Line by its reference",
        "description": "Requires `Planning.PurchaseOrders.Read` privileges",
        "parameters": [
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.PurchaseOrders.Responses.PurchaseOrderLineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/salesOrderLines": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Get all existing lines (paginated)",
        "description": "Requires `Planning.SalesOrders.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Planning.SalesOrders.Responses.SalesOrderLineResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/salesOrderLines/{lineReference}": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Get one Sales Order Line by its reference",
        "description": "Requires `Planning.SalesOrders.Read` privileges",
        "parameters": [
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.SalesOrders.Responses.SalesOrderLineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/salesOrders": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Get all existing orders (paginated)",
        "description": "Requires `Planning.SalesOrders.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Planning.SalesOrders.Responses.SalesOrderResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Create a new sales order",
        "description": "Requires `Planning.SalesOrders.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customerReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.SalesOrders.Requests.CreateSalesOrderRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.SalesOrders.Responses.SalesOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/salesOrders/{orderReference}": {
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Edit an existing Sales Order",
        "description": "Requires `Planning.SalesOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customerReference",
                  "code",
                  "name",
                  "notes"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.SalesOrders.Requests.UpdateSalesOrderRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Delete an existing Sales Order and its lines",
        "description": "Requires `Planning.SalesOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Get one Sales Order Line by its reference",
        "description": "Requires `Planning.SalesOrders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.SalesOrders.Responses.SalesOrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/salesOrders/{orderReference}/lines": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Get all lines for an order",
        "description": "Requires `Planning.SalesOrders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Planning.SalesOrders.Responses.SalesOrderLineResponse]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Create a new sales order line",
        "description": "Requires `Planning.SalesOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "skuReference",
                  "quantity",
                  "released"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.SalesOrders.Requests.CreateSalesOrderLineRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.SalesOrders.Responses.SalesOrderLineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/salesOrders/{orderReference}/lines/{lineReference}": {
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Edit an existing Sales Order Line",
        "description": "Requires `Planning.SalesOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "quantity",
                  "skuReference",
                  "dueAt",
                  "notes"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.SalesOrders.Requests.UpdateSalesOrderLineRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Delete an existing Sales Order Line",
        "description": "Requires `Planning.SalesOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Get one Sales Order Line by its reference",
        "description": "Requires `Planning.SalesOrders.Read` privileges",
        "parameters": [
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.SalesOrders.Responses.SalesOrderLineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/salesOrders/{orderReference}/lines/{lineReference}/cancel": {
      "post": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Cancel a sales order line",
        "description": "Requires `Planning.SalesOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/salesOrders/{orderReference}/lines/{lineReference}/confirm": {
      "post": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Confirm a sales order line",
        "description": "Requires `Planning.SalesOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/salesOrders/{orderReference}/lines/{lineReference}/undoCancellation": {
      "post": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Reverts the cancellation of a sales order line",
        "description": "Requires `Planning.SalesOrders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/salesOrders/lines": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Get all existing lines (paginated)",
        "description": "Requires `Planning.SalesOrders.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Planning.SalesOrders.Responses.SalesOrderLineResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/salesOrders/lines/{lineReference}": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Get one Sales Order Line by its reference",
        "description": "Requires `Planning.SalesOrders.Read` privileges",
        "parameters": [
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.SalesOrders.Responses.SalesOrderLineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/suppliers": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Get all existing suppliers (paginated)",
        "description": "Requires `Planning.Suppliers.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Planning.Suppliers.Responses.SupplierResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Create a new supplier",
        "description": "Requires `Planning.Suppliers.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.Suppliers.Requests.CreateSupplierRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.Suppliers.Responses.SupplierResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/planning/suppliers/{supplierReference}": {
      "put": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Edit an existing supplier",
        "description": "Requires `Planning.Suppliers.Write` privileges",
        "parameters": [
          {
            "name": "supplierReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Planning.Suppliers.Requests.UpdateSupplierRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Delete an existing supplier",
        "description": "Requires `Planning.Suppliers.Write` privileges",
        "parameters": [
          {
            "name": "supplierReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Get one supplier by its reference",
        "description": "Requires `Planning.Suppliers.Read` privileges",
        "parameters": [
          {
            "name": "supplierReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Planning.Suppliers.Responses.SupplierResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/employees": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get all existing employees",
        "description": "Requires `Production.Employees.Read` privileges",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Employees.Responses.EmployeeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Create a new employee",
        "description": "Requires `Production.Employees.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Employees.Requests.CreateEmployeeRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Employees.Responses.EmployeeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/employees/{employeeReference}": {
      "put": {
        "tags": [
          "Employees"
        ],
        "summary": "Edit an existing employee",
        "description": "Requires `Production.Employees.Write` privileges",
        "parameters": [
          {
            "name": "employeeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "active",
                  "username",
                  "firstName",
                  "lastName",
                  "emails"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Employees.Requests.UpdateEmployeeRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Employees"
        ],
        "summary": "Delete an existing employee",
        "description": "Requires `Production.Employees.Write` privileges",
        "parameters": [
          {
            "name": "employeeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get one production Employee by its reference",
        "description": "Requires `Production.Employees.Read` privileges",
        "parameters": [
          {
            "name": "employeeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Employees.Responses.EmployeeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/employees/{employeeReference}/operationAssignments/active": {
      "get": {
        "tags": [
          "Operation Assignments"
        ],
        "summary": "Get all existing operation assignments for an employee",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "employeeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.OperationAssignments.Responses.OperationAssignmentResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/employees/{employeeReference}/operationAssignments/recalculate": {
      "post": {
        "tags": [
          "Operation Assignments"
        ],
        "summary": "Recalculate the times for all assignments of an employee",
        "description": "Requires `App.SuperAdmin` privileges",
        "parameters": [
          {
            "name": "employeeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "from",
                  "to"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.OperationAssignments.Requests.RecalculateAssignmentsRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/employees/{employeeReference}/presence/active": {
      "get": {
        "tags": [
          "Presence Records"
        ],
        "summary": "Get all active presence records for an employee",
        "description": "Requires `Production.Employees.Read` privileges",
        "parameters": [
          {
            "name": "employeeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.PresenceAssignments.Responses.ActivePresenceAssignmentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/employees/{employeeReference}/resources": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get all usual resources for an employee",
        "description": "Requires `Production.Employees.Read` privileges",
        "parameters": [
          {
            "name": "employeeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Resources.Responses.ResourceResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Add a usual resource to an employee",
        "description": "Requires `Production.Employees.Write` privileges",
        "parameters": [
          {
            "name": "employeeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "resourceReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Employees.Requests.AddUsualResourceRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Resources.Responses.ResourceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/employees/{employeeReference}/resources/{resourceReference}": {
      "delete": {
        "tags": [
          "Employees"
        ],
        "summary": "Remove a usual resource from an employee",
        "description": "Requires `Production.Employees.Write` privileges",
        "parameters": [
          {
            "name": "employeeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/interruptionTypes": {
      "get": {
        "tags": [
          "Interruption Types"
        ],
        "summary": "Get all existing interruption types",
        "description": "Requires `Production.Incident.Read` privileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.InterruptionTypes.Responses.InterruptionTypeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Interruption Types"
        ],
        "summary": "Create a new interruption type",
        "description": "Requires `Production.Incident.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "planned"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.InterruptionTypes.Requests.CreateInterruptionTypeRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.InterruptionTypes.Responses.InterruptionTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/interruptionTypes/{typeReference}": {
      "put": {
        "tags": [
          "Interruption Types"
        ],
        "summary": "Edit an existing interruption type",
        "description": "Requires `Production.Incident.Write` privileges",
        "parameters": [
          {
            "name": "typeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "planned",
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.InterruptionTypes.Requests.UpdateInterruptionTypeRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Interruption Types"
        ],
        "summary": "Delete an existing interruption type",
        "description": "Requires `Production.Incident.Write` privileges",
        "parameters": [
          {
            "name": "typeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Interruption Types"
        ],
        "summary": "Get one interruption type by its reference",
        "description": "Requires `Production.Incident.Read` privileges",
        "parameters": [
          {
            "name": "typeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.InterruptionTypes.Responses.InterruptionTypeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/operationAssignments/{assignmentReference}": {
      "put": {
        "tags": [
          "Operation Assignments"
        ],
        "summary": "Edit an existing assignment",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "assignmentReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "startedAt",
                  "finishedAt"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.OperationAssignments.Requests.UpdateAssignmentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Operation Assignments"
        ],
        "summary": "Delete an existing assignment",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "assignmentReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Operation Assignments"
        ],
        "summary": "Get one assignment by its reference",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "assignmentReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.OperationAssignments.Responses.OperationAssignmentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/operationAssignments/active": {
      "get": {
        "tags": [
          "Operation Assignments"
        ],
        "summary": "Get all active operation assignments",
        "description": "Requires `Production.Orders.Read` privileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.OperationAssignments.Responses.OperationAssignmentResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/operationTypes": {
      "get": {
        "tags": [
          "Operation Types"
        ],
        "summary": "Get all existing operation types (paginated)",
        "description": "Requires `Production.Resource.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Production.OperationTypes.Responses.OperationTypeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Operation Types"
        ],
        "summary": "Create a new operation type",
        "description": "Requires `Production.Resource.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.OperationTypes.Requests.CreateOperationTypeRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.OperationTypes.Responses.OperationTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/operationTypes/{typeReference}": {
      "put": {
        "tags": [
          "Operation Types"
        ],
        "summary": "Edit an existing operation type",
        "description": "Requires `Production.Resource.Write` privileges",
        "parameters": [
          {
            "name": "typeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.OperationTypes.Requests.UpdateOperationTypeRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Operation Types"
        ],
        "summary": "Delete an existing operation type",
        "description": "Requires `Production.Resource.Write` privileges",
        "parameters": [
          {
            "name": "typeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Operation Types"
        ],
        "summary": "Get one operation type by its reference",
        "description": "Requires `Production.Resource.Read` privileges",
        "parameters": [
          {
            "name": "typeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.OperationTypes.Responses.OperationTypeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/operationTypes/{typeReference}/resources": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get resources that have a certain capability",
        "description": "Requires `Production.Resources.Read` privileges",
        "parameters": [
          {
            "name": "typeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Resources.Responses.CapabilityResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders": {
      "get": {
        "tags": [
          "Production Orders"
        ],
        "summary": "Get all existing production orders (paginated)",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Mode",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Production.Orders.Requests.GetOrdersRequestMode"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Production.Orders.Responses.OrderResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Production Orders"
        ],
        "summary": "Create a new production order",
        "description": "Requires `Production.Orders.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "requestReference",
                  "plannedQuantity"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.CreateOrderRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.OrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}": {
      "get": {
        "tags": [
          "Production Orders"
        ],
        "summary": "Get one production order by its batch number",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.OrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Production Orders"
        ],
        "summary": "Edit an existing production order",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "plannedQuantity"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.UpdateOrderRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Production Orders"
        ],
        "summary": "Delete an existing production order",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/audit": {
      "get": {
        "tags": [
          "Production Orders"
        ],
        "summary": "Get the audit trail for a production order",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Events.AuditResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/cancelUnstartedOperations": {
      "post": {
        "tags": [
          "Production Orders"
        ],
        "summary": "Cancel the current non-started operations of the order.",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/inputs": {
      "get": {
        "tags": [
          "Operation Inputs"
        ],
        "summary": "Get all existing inputs for an order",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Orders.Responses.InputResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Get all existing operations for a production order",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Orders.Responses.OperationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Create a new operation for a production order",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "operationTypeReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.AddOperationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.OperationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}": {
      "put": {
        "tags": [
          "Operations"
        ],
        "summary": "Edit an existing operation",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "operationTypeReference",
                  "relativeAmount",
                  "positionX",
                  "positionY",
                  "resourceReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.UpdateOperationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Operations"
        ],
        "summary": "Delete an existing operation",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Get one operation by its reference",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.OperationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/actionSteps": {
      "get": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Get all existing action steps for an operation",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Orders.Responses.ActionStepResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Create a new action step",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "when"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.AddActionStepRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.ActionStepResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/actionSteps/{stepReference}": {
      "put": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Edit an existing action step",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "when",
                  "minutesDuration",
                  "minutesWorkload",
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.UpdateActionStepRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Get one action step by its reference",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.ActionStepResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/assignments": {
      "get": {
        "tags": [
          "Operation Assignments"
        ],
        "summary": "Get all existing assignments for an operation",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.OperationAssignments.Responses.OperationAssignmentResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Operation Assignments"
        ],
        "summary": "Create a new assignment",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "employeeReference",
                  "startedAt"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.OperationAssignments.Requests.CreateAssignmentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.OperationAssignments.Responses.OperationAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/finish": {
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Finishes an operation",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/inputs": {
      "get": {
        "tags": [
          "Operation Inputs"
        ],
        "summary": "Get all existing inputs for an operation",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Orders.Responses.InputResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Operation Inputs"
        ],
        "summary": "Create a new input",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "skuReference",
                  "quantity",
                  "when"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.AddInputRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.InputResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/inputs/{inputReference}": {
      "put": {
        "tags": [
          "Operation Inputs"
        ],
        "summary": "Edit an existing input",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "skuReference",
                  "quantity",
                  "when"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.UpdateInputRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Operation Inputs"
        ],
        "summary": "Delete an existing input",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Operation Inputs"
        ],
        "summary": "Get one input by its reference",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.InputResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/inputs/{inputReference}/convert": {
      "post": {
        "tags": [
          "Operation Inputs"
        ],
        "summary": "Convert a semifinished input from stock to manufacturing and vice-versa",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "recipeReference",
                  "type"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.ConvertInputRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/inspectionSteps": {
      "get": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Get all existing inspection steps for an operation",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Orders.Responses.InspectionStepResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Create a new inspection step",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "inspectionType"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.AddInspectionStepRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.InspectionStepResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/inspectionSteps/{stepReference}": {
      "put": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Edit an existing inspection step",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "inspectionType",
                  "minutesDuration",
                  "minutesWorkload",
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.UpdateInspectionStepRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Get one inspection step by its reference",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.InspectionStepResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/inspectionSteps/{stepReference}/result": {
      "put": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Edit the result an existing inspection step",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.CompleteInspectionStepRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/interruptions": {
      "get": {
        "tags": [
          "Operation Interruptions"
        ],
        "summary": "Get all existing interruptions for an operation",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Orders.Responses.InterruptionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Operation Interruptions"
        ],
        "summary": "Create a new interruption",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "typeReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.AddInterruptionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.InterruptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/interruptions/{interruptionReference}": {
      "put": {
        "tags": [
          "Operation Interruptions"
        ],
        "summary": "Update an existing interruption",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interruptionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "typeReference",
                  "startedAt",
                  "finishedAt"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.UpdateInterruptionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Operation Interruptions"
        ],
        "summary": "Delete an existing interruption",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interruptionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Operation Interruptions"
        ],
        "summary": "Get one interruption by its reference",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interruptionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.InterruptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/interruptions/{interruptionReference}/finish": {
      "post": {
        "tags": [
          "Operation Interruptions"
        ],
        "summary": "Finish an existing interruption",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interruptionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/outputs": {
      "get": {
        "tags": [
          "Operation Outputs"
        ],
        "summary": "Get all existing outputs for an operation",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Orders.Responses.OutputResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Operation Outputs"
        ],
        "summary": "Create a new output",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "completedQuantity",
                  "rejectedQuantity",
                  "inputs"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.RecordOutputRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.OutputResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/outputs/{outputReference}": {
      "delete": {
        "tags": [
          "Operation Outputs"
        ],
        "summary": "Delete an existing output",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outputReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Operation Outputs"
        ],
        "summary": "Get one output by its reference",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outputReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.OutputResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/start": {
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Start an operation",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/steps": {
      "get": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Get all existing steps for an operation",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Orders.Responses.StepResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/steps/{stepReference}": {
      "delete": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Delete an existing step",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Get one step by its reference",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.StepResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/steps/{stepReference}/moveDown": {
      "post": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Move down an action step in the execution order",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/steps/{stepReference}/moveUp": {
      "post": {
        "tags": [
          "Operation Steps"
        ],
        "summary": "Move up an action step in the execution order",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/operations/{operationReference}/undoFinish": {
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Reverts the completion of an operation",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "interruptionTypeReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.UndoFinishOperationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/restrictions": {
      "get": {
        "tags": [
          "Operation Restrictions"
        ],
        "summary": "Get all existing restrictions for a production order",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Orders.Responses.RestrictionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Operation Restrictions"
        ],
        "summary": "Create a new restriction",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "fromReference",
                  "toReference",
                  "type"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.AddRestrictionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.RestrictionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/restrictions/{fromReference}/{toReference}": {
      "put": {
        "tags": [
          "Operation Restrictions"
        ],
        "summary": "Edit an existing restriction",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "type"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.UpdateRestrictionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Operation Restrictions"
        ],
        "summary": "Delete an existing restriction",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/{orderReference}/targetDate": {
      "put": {
        "tags": [
          "Production Orders"
        ],
        "summary": "Alter the target date up to this order",
        "description": "Requires `Production.Orders.Sequence` privileges",
        "parameters": [
          {
            "name": "orderReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Orders.Requests.SequenceOrderRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/byInput/{inputReference}": {
      "get": {
        "tags": [
          "Production Orders"
        ],
        "summary": "Get one production order by its batch number",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "inputReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.OrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/orders/byOutput/{outputId}": {
      "get": {
        "tags": [
          "Production Orders"
        ],
        "summary": "Get one production order by its batch number",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "outputId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Orders.Responses.OrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/plans": {
      "get": {
        "tags": [
          "Plans"
        ],
        "summary": "Get all existing plans",
        "description": "Requires `Production.Orders.Read` privileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Plans.Responses.PlanResponse]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Plans"
        ],
        "summary": "Create a new plan",
        "description": "Requires `Production.Orders.Sequence` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Plans.Requests.CreatePlanRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Plans.Responses.PlanResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/plans/{planReference}": {
      "get": {
        "tags": [
          "Plans"
        ],
        "summary": "Get a specific plan",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "planReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Plans.Responses.PlanResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Plans"
        ],
        "summary": "Update the existing plan",
        "description": "Requires `Production.Orders.Sequence` privileges",
        "parameters": [
          {
            "name": "planReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "operations"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Plans.Requests.UpdatePlanRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Plans"
        ],
        "summary": "Delete an existing plan",
        "description": "Requires `Production.Orders.Sequence` privileges",
        "parameters": [
          {
            "name": "planReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/plans/{planReference}/apply": {
      "post": {
        "tags": [
          "Plans"
        ],
        "summary": "Apply this plan",
        "description": "Requires `Production.Orders.Sequence` privileges",
        "parameters": [
          {
            "name": "planReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/plans/{planReference}/refresh": {
      "post": {
        "tags": [
          "Plans"
        ],
        "summary": "Refresh data for a plan",
        "description": "Requires `Production.Orders.Sequence` privileges",
        "parameters": [
          {
            "name": "planReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/plans/{planReference}/solve": {
      "post": {
        "tags": [
          "Plans"
        ],
        "summary": "Find a solution for a plan (async)",
        "description": "Requires `Production.Orders.Sequence` privileges",
        "parameters": [
          {
            "name": "planReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "useRawMaterialRestrictions",
                  "parallelOperations"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Plans.Requests.SolvePlanRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/presence/active": {
      "get": {
        "tags": [
          "Presence Records"
        ],
        "summary": "Get all active presence records",
        "description": "Requires `Production.Employees.Read` privileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.PresenceAssignments.Responses.ActivePresenceAssignmentsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipes": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get all existing recipes (paginated)",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Production.Recipes.Responses.RecipeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Create a new recipe",
        "description": "Requires `Production.Recipes.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "productReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Recipes.Requests.CreateRecipeRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Recipes.Responses.RecipeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipes/{recipeReference}": {
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "Edit an existing recipe",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "recipeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Recipes.Requests.UpdateRecipeRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Delete an existing Recipe",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "recipeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get one Recipe by its reference",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "recipeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Recipes.Responses.RecipeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipes/{recipeReference}/conditions": {
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "Edit the conditions of a recipe",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "recipeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Recipes.Requests.UpdateRecipeFormulaRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipes/{recipeReference}/versions": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get all existing versions for a recipe",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "recipeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.RecipeVersions.Responses.VersionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipes/{recipeReference}/versions/{versionReference}/activate": {
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Activate an existing version",
        "description": "_This will deactivate any other active version and will prevent any further modification on the version_\n\nRequires `Production.Recipes.Activate` privileges",
        "parameters": [
          {
            "name": "recipeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipes/{recipeReference}/versions/{versionReference}/deactivate": {
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Deactivate an existing version",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "recipeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions": {
      "post": {
        "tags": [
          "Recipe Versions"
        ],
        "summary": "Create a new version",
        "description": "Requires `Production.Recipes.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "recipeReference",
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.CreateVersionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.VersionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}": {
      "put": {
        "tags": [
          "Recipe Versions"
        ],
        "summary": "Edit an existing version",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.UpdateVersionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipe Versions"
        ],
        "summary": "Delete an existing version",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Recipe Versions"
        ],
        "summary": "Get one version by its reference",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.VersionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/copy": {
      "post": {
        "tags": [
          "Recipe Versions"
        ],
        "summary": "Copy an existing version",
        "description": "This will copy the version and the selected contents into a new version of this or another recipe\n\nRequires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "newName"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.CopyVersionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.VersionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations": {
      "get": {
        "tags": [
          "Recipe Operations"
        ],
        "summary": "Get all existing operations for a recipe version",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.RecipeVersions.Responses.OperationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recipe Operations"
        ],
        "summary": "Create a new operation",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "operationTypeReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.AddOperationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.OperationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}": {
      "put": {
        "tags": [
          "Recipe Operations"
        ],
        "summary": "Edit an existing operation",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "operationTypeReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.UpdateOperationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipe Operations"
        ],
        "summary": "Delete an existing operation",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Recipe Operations"
        ],
        "summary": "Get one operation by its reference",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.OperationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/actionSteps": {
      "get": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Get all existing steps for an operation",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.RecipeVersions.Responses.ActionStepResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Create a new step",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "when"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.AddActionStepRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.ActionStepResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/actionSteps/{stepReference}": {
      "put": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Edit an existing action step",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "when",
                  "minutesDuration",
                  "minutesWorkload",
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.UpdateActionStepRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Get one step by its reference",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.ActionStepResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/conditions": {
      "put": {
        "tags": [
          "Recipe Operations"
        ],
        "summary": "Edit the conditions for an existing operation",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.UpdateOperationFormulaRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/inputs": {
      "get": {
        "tags": [
          "Recipe Operation Inputs"
        ],
        "summary": "Get all existing inputs for an operation",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.RecipeVersions.Responses.InputResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recipe Operation Inputs"
        ],
        "summary": "Create a new input",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "skuReference",
                  "quantity",
                  "when"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.AddInputRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id",
                    "externalReference",
                    "type",
                    "when",
                    "quantity",
                    "frequency",
                    "conditionFormula",
                    "createdAt",
                    "createdBy",
                    "lastModifiedAt",
                    "lastModifiedBy"
                  ],
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Production.RecipeVersions.Responses.RawMaterialInputResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Production.RecipeVersions.Responses.SemifinishedInputResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/inputs/{inputReference}": {
      "put": {
        "tags": [
          "Recipe Operation Inputs"
        ],
        "summary": "Edit an existing input",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "skuReference",
                  "quantity",
                  "when"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.UpdateInputRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipe Operation Inputs"
        ],
        "summary": "Delete an existing input",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Recipe Operation Inputs"
        ],
        "summary": "Get one input by its reference",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id",
                    "externalReference",
                    "type",
                    "when",
                    "quantity",
                    "frequency",
                    "conditionFormula",
                    "createdAt",
                    "createdBy",
                    "lastModifiedAt",
                    "lastModifiedBy"
                  ],
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Production.RecipeVersions.Responses.RawMaterialInputResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Production.RecipeVersions.Responses.SemifinishedInputResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/inputs/{inputReference}/conditions": {
      "put": {
        "tags": [
          "Recipe Operation Inputs"
        ],
        "summary": "Edit the conditions for an existing input",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.UpdateInputFormulaRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/inspectionSteps": {
      "get": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Get all existing inspection steps for an operation",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.RecipeVersions.Responses.InspectionStepResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Create a new inspection step",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "when",
                  "inspectionType"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.AddInspectionStepRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.InspectionStepResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/inspectionSteps/{stepReference}": {
      "put": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Edit an existing inspection step",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "when",
                  "minutesDuration",
                  "minutesWorkload",
                  "name",
                  "inspectionType"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.UpdateInspectionStepRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Get one inspection step by its reference",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.InspectionStepResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/move": {
      "post": {
        "tags": [
          "Recipe Operations"
        ],
        "summary": "Moves a operation and all the ones that precede it to another recipe",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "newVersionName",
                  "destinationRecipeReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.PartialMoveVersionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.VersionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/steps": {
      "get": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Get all existing steps for an operation",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.RecipeVersions.Responses.StepResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/steps/{stepReference}": {
      "delete": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Delete an existing step",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Get one step by its reference",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.StepResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/steps/{stepReference}/conditions": {
      "put": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Edit the conditions for an existing step",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.UpdateStepFormulaRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/steps/{stepReference}/moveDown": {
      "post": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Move down an action step in the execution order",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/operations/{operationReference}/steps/{stepReference}/moveUp": {
      "post": {
        "tags": [
          "Recipe Operation Steps"
        ],
        "summary": "Move up an action step in the execution order",
        "description": "Requires `Production.Orders.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/restrictions": {
      "get": {
        "tags": [
          "Recipe Operation Restrictions"
        ],
        "summary": "Get all existing restrictions for a recipe version",
        "description": "Requires `Production.Recipes.Read` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.RecipeVersions.Responses.RestrictionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recipe Operation Restrictions"
        ],
        "summary": "Create a new restriction",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "fromReference",
                  "toReference",
                  "type"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.AddRestrictionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.RestrictionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/recipeVersions/{versionReference}/restrictions/{restrictionId}": {
      "put": {
        "tags": [
          "Recipe Operation Restrictions"
        ],
        "summary": "Edit an existing restriction",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restrictionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "type"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.RecipeVersions.Requests.UpdateRestrictionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipe Operation Restrictions"
        ],
        "summary": "Delete an existing restriction",
        "description": "Requires `Production.Recipes.Write` privileges",
        "parameters": [
          {
            "name": "versionReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restrictionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/requests": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Get all existing requests (paginated)",
        "description": "Requires `Production.Requests.Read` privileges",
        "parameters": [
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Production.Requests.Responses.RequestResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Requests"
        ],
        "summary": "Create a new request",
        "description": "Requires `Production.Requests.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "requestedQuantity",
                  "skuReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Requests.Requests.CreateRequestRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Requests.Responses.RequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/requests/{requestReference}": {
      "put": {
        "tags": [
          "Requests"
        ],
        "summary": "Edit an existing request",
        "description": "Requires `Production.Requests.Write` privileges",
        "parameters": [
          {
            "name": "requestReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "skuReference",
                  "requester",
                  "notes",
                  "dueAt",
                  "requestedQuantity"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Requests.Requests.UpdateRequestRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Requests"
        ],
        "summary": "Delete an existing request",
        "description": "Requires `Production.Requests.Write` privileges",
        "parameters": [
          {
            "name": "requestReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Get one request by its reference",
        "description": "Requires `Production.Requests.Read` privileges",
        "parameters": [
          {
            "name": "requestReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Requests.Responses.RequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/requests/{requestReference}/audit": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Get the audit trail for a production request",
        "description": "Requires `Production.Requests.Read` privileges",
        "parameters": [
          {
            "name": "requestReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Events.AuditResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/requests/{requestReference}/inputs": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Get the production inputs planned for a production request",
        "description": "Requires `Production.Requests.Read` privileges",
        "parameters": [
          {
            "name": "requestReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Requests.Responses.InputResponse]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resourceGroups": {
      "get": {
        "tags": [
          "Resource Groups"
        ],
        "summary": "Get all existing resource groups (paginated)",
        "description": "Requires `Production.Resource.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Production.ResourceGroups.Responses.GroupResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Resource Groups"
        ],
        "summary": "Create a new resource group",
        "description": "Requires `Production.Resource.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.ResourceGroups.Requests.CreateGroupRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.ResourceGroups.Responses.GroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resourceGroups/{groupReference}": {
      "put": {
        "tags": [
          "Resource Groups"
        ],
        "summary": "Edit an existing resource group",
        "description": "Requires `Production.Resource.Write` privileges",
        "parameters": [
          {
            "name": "groupReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.ResourceGroups.Requests.UpdateGroupRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Resource Groups"
        ],
        "summary": "Delete an existing resource group",
        "description": "Requires `Production.Resource.Write` privileges",
        "parameters": [
          {
            "name": "groupReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Resource Groups"
        ],
        "summary": "Get one resource group by its reference",
        "description": "Requires `Production.Resource.Read` privileges",
        "parameters": [
          {
            "name": "groupReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.ResourceGroups.Responses.GroupResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resourceGroups/{groupReference}/activeOperations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Get all active operations for a group",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "groupReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Orders.Responses.OperationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resourceGroups/{groupReference}/children": {
      "get": {
        "tags": [
          "Resource Groups"
        ],
        "summary": "Get resource groups that belong to a given group (paginated)",
        "description": "Requires `Production.Resources.Read` privileges",
        "parameters": [
          {
            "name": "groupReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Production.ResourceGroups.Responses.GroupResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resourceGroups/{groupReference}/presence/assign": {
      "post": {
        "tags": [
          "Presence Records"
        ],
        "summary": "Create a new record in a group",
        "description": "Requires `Production.Employees.Write` privileges",
        "parameters": [
          {
            "name": "groupReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "employeeReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.PresenceAssignments.Requests.AssignRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.PresenceAssignments.Responses.GroupAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resourceGroups/{groupReference}/presence/unassign": {
      "post": {
        "tags": [
          "Presence Records"
        ],
        "summary": "Finish an ongoing record in a group",
        "description": "Requires `Production.Employees.Write` privileges",
        "parameters": [
          {
            "name": "groupReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "employeeReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.PresenceAssignments.Requests.UnassignRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resourceGroups/{groupReference}/resources": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get resources that are part of a given group (paginated)",
        "description": "Requires `Production.Resources.Read` privileges",
        "parameters": [
          {
            "name": "groupReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Production.Resources.Responses.ResourceResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resources": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get all existing resources (paginated)",
        "description": "Requires `Production.Resources.Read` privileges",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Production.Resources.Responses.ResourceResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Create a new resource",
        "description": "Requires `Production.Resources.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "groupReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Resources.Requests.CreateResourceRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Resources.Responses.ResourceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resources/{resourceReference}": {
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Edit an existing Resource",
        "description": "Requires `Production.Resources.Write` privileges",
        "parameters": [
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "groupReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Resources.Requests.UpdateResourceRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "summary": "Delete an existing Resource",
        "description": "Requires `Production.Resources.Write` privileges",
        "parameters": [
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get one Resource by its reference",
        "description": "Requires `Production.Resources.Read` privileges",
        "parameters": [
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Resources.Responses.ResourceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resources/{resourceReference}/activeOperations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Get all active operations for a resource",
        "description": "Requires `Production.Orders.Read` privileges",
        "parameters": [
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Orders.Responses.OperationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resources/{resourceReference}/capabilities": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get all capabilities for a given resource",
        "description": "Requires `Production.Resource.Read` privileges",
        "parameters": [
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Production.Resources.Responses.CapabilityResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resources/{resourceReference}/capabilities/{typeReference}": {
      "delete": {
        "tags": [
          "Resources"
        ],
        "summary": "Remove a capability from this resource",
        "description": "Requires `Production.Resources.Write` privileges",
        "parameters": [
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "typeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Add a capability to this resource",
        "description": "Requires `Production.Resources.Write` privileges",
        "parameters": [
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "typeReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "efficiency"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Resources.Requests.AddCapabilityRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Resources.Responses.CapabilityResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resources/{resourceReference}/location": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Gets the relevant warehouse information about the resource",
        "description": "Requires `Warehouse.Workstations.Read` privileges",
        "parameters": [
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Workstations.Responses.WorkstationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Updates the warehouse location that will act as output of this resource",
        "description": "Requires `Warehouse.Workstations.Write` privileges",
        "parameters": [
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "locationReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Warehouse.Workstations.Requests.UpdateWorkstationLocationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resources/{resourceReference}/presence": {
      "get": {
        "tags": [
          "Presence Records"
        ],
        "summary": "Get all existing presence records for a resource",
        "description": "Requires `Production.Employees.Read` privileges",
        "parameters": [
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Production.PresenceAssignments.Responses.ResourceAssignmentResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resources/{resourceReference}/presence/assign": {
      "post": {
        "tags": [
          "Presence Records"
        ],
        "summary": "Create a new presence record for a resource",
        "description": "Requires `Production.Employees.Presence` privileges",
        "parameters": [
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "employeeReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.PresenceAssignments.Requests.AssignRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.PresenceAssignments.Responses.ResourceAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/resources/{resourceReference}/presence/unassign": {
      "post": {
        "tags": [
          "Presence Records"
        ],
        "summary": "Finish an ongoing record in a resource",
        "description": "Requires `Production.Employees.Presence` privileges",
        "parameters": [
          {
            "name": "resourceReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "employeeReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.PresenceAssignments.Requests.UnassignRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/production/schedules": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "Get the current schedule",
        "description": "Requires `Production.Orders.Read` privileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Production.Schedules.Responses.ScheduleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Schedules"
        ],
        "summary": "Edit the current schedule",
        "description": "Requires `Production.Orders.Sequence` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "shifts",
                  "offsetMinutes"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Production.Schedules.Requests.UpdateScheduleRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Get an API key to search for all objects",
        "description": "Requires `App.Access` privileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Responses.SearchApiKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/search/items/reindex": {
      "post": {
        "tags": [
          "Search"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/search/production/reindex": {
      "post": {
        "tags": [
          "Search"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Requires `Users.Read` privileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Users.Responses.UserResponse]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a user",
        "description": "Requires `Users.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "displayName",
                  "firstName"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Users.Requests.AddUserRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users.Responses.UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/users/{email}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user with its roles",
        "description": "Requires `Users.Read` privileges",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users.Responses.UserWithRolesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Remove a user",
        "description": "Requires `Users.Write` privileges",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/users/{email}/roles/{role}": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a role to a user",
        "description": "Requires `Users.Write` privileges",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Remove a role from a user",
        "description": "Requires `Users.Write` privileges",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/locations": {
      "get": {
        "tags": [
          "Warehouse Locations"
        ],
        "summary": "Get all existing locations (paginated)",
        "description": "Requires `Warehouse.Locations.Read` privileges",
        "parameters": [
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Warehouse.Locations.Responses.LocationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Warehouse Locations"
        ],
        "summary": "Create a new warehouse location",
        "description": "Requires `Warehouse.Locations.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Warehouse.Locations.Requests.CreateLocationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Locations.Responses.LocationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/locations/{locationReference}": {
      "put": {
        "tags": [
          "Warehouse Locations"
        ],
        "summary": "Edit an existing warehouse location",
        "description": "Requires `Warehouse.Locations.Write` privileges",
        "parameters": [
          {
            "name": "locationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Warehouse.Locations.Requests.UpdateLocationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Warehouse Locations"
        ],
        "summary": "Delete an existing warehouse location",
        "description": "Requires `Warehouse.Locations.Write` privileges",
        "parameters": [
          {
            "name": "locationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Warehouse Locations"
        ],
        "summary": "Get one location by its ID",
        "description": "Requires `Warehouse.Locations.Write` privileges",
        "parameters": [
          {
            "name": "locationReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Locations.Responses.LocationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/receipts": {
      "get": {
        "tags": [
          "Receipts"
        ],
        "summary": "Get all existing receipts (paginated)",
        "description": "Requires `Warehouse.Receipts.Read` privileges",
        "parameters": [
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Warehouse.Receipts.Responses.ReceiptResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Receipts"
        ],
        "summary": "Create a new receipt",
        "description": "Requires `Warehouse.Receipts.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "locationReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Warehouse.Receipts.Requests.CreateReceiptRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Receipts.Responses.ReceiptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/receipts/{receiptReference}": {
      "put": {
        "tags": [
          "Receipts"
        ],
        "summary": "Edit an existing receipt",
        "description": "Requires `Warehouse.Receipts.Write` privileges",
        "parameters": [
          {
            "name": "receiptReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "locationReference",
                  "code",
                  "date"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Warehouse.Receipts.Requests.UpdateReceiptRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Receipts"
        ],
        "summary": "Delete an existing receipt",
        "description": "Requires `Warehouse.Receipts.Write` privileges",
        "parameters": [
          {
            "name": "receiptReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Receipts"
        ],
        "summary": "Get one receipt by its reference",
        "description": "Requires `Warehouse.Receipts.Read` privileges",
        "parameters": [
          {
            "name": "receiptReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Receipts.Responses.ReceiptResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/receipts/{receiptReference}/lines": {
      "get": {
        "tags": [
          "Receipts"
        ],
        "summary": "Get the lines of a receipt by its reference",
        "description": "Requires `Warehouse.Receipts.Read` privileges",
        "parameters": [
          {
            "name": "receiptReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Warehouse.Receipts.Responses.ReceiptLineResponse]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Receipts"
        ],
        "summary": "Add a new line to the receipt",
        "description": "Requires `Warehouse.Receipts.Write` privileges",
        "parameters": [
          {
            "name": "receiptReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "relatedReference",
                  "skuReference",
                  "quantity"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Warehouse.Receipts.Requests.AddReceiptLineRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Receipts.Responses.ReceiptLineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/receipts/{receiptReference}/lines/{lineReference}": {
      "get": {
        "tags": [
          "Receipts"
        ],
        "summary": "Get one line of a receipt by its reference",
        "description": "Requires `Warehouse.Receipts.Read` privileges",
        "parameters": [
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiptReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Receipts.Responses.ReceiptLineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Receipts"
        ],
        "summary": "Removes a line from the receipt",
        "description": "Requires `Warehouse.Receipts.Write` privileges",
        "parameters": [
          {
            "name": "receiptReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/receipts/{receiptReference}/receive": {
      "post": {
        "tags": [
          "Receipts"
        ],
        "summary": "Receive a receipt",
        "description": "Requires `Warehouse.Receipts.Write` privileges",
        "parameters": [
          {
            "name": "receiptReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/receipts/{receiptReference}/reverse": {
      "post": {
        "tags": [
          "Receipts"
        ],
        "summary": "Reverse a receipt",
        "description": "This will undo the shipping and place the receipt back to pending status. Requires `Warehouse.Receipts.Write` privileges",
        "parameters": [
          {
            "name": "receiptReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/receipts/lines/{lineReference}": {
      "get": {
        "tags": [
          "Receipts"
        ],
        "summary": "Get one line of a receipt by its reference",
        "description": "Requires `Warehouse.Receipts.Read` privileges",
        "parameters": [
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Receipts.Responses.ReceiptLineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/shipments": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Get all existing shipments (paginated)",
        "description": "Requires `Warehouse.Shipments.Read` privileges",
        "parameters": [
          {
            "name": "FilterBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedList[Warehouse.Shipments.Responses.ShipmentResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Shipments"
        ],
        "summary": "Create a new shipment",
        "description": "Requires `Warehouse.Shipments.Write` privileges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "locationReference"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Warehouse.Shipments.Requests.CreateShipmentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Shipments.Responses.ShipmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/shipments/{shipmentReference}": {
      "put": {
        "tags": [
          "Shipments"
        ],
        "summary": "Edit an existing warehouse shipment",
        "description": "Requires `Warehouse.Shipments.Write` privileges",
        "parameters": [
          {
            "name": "shipmentReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "locationReference",
                  "code",
                  "date"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Warehouse.Shipments.Requests.UpdateShipmentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shipments"
        ],
        "summary": "Delete an existing warehouse shipment",
        "description": "Requires `Warehouse.Shipments.Write` privileges",
        "parameters": [
          {
            "name": "shipmentReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Get one shipment by its reference",
        "description": "Requires `Warehouse.Shipments.Write` privileges",
        "parameters": [
          {
            "name": "shipmentReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Shipments.Responses.ShipmentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/shipments/{shipmentReference}/lines": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Get the lines of a shipment by its reference",
        "description": "Requires `Warehouse.Shipments.Write` privileges",
        "parameters": [
          {
            "name": "shipmentReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericList[Warehouse.Shipments.Responses.ShipmentLineResponse]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Shipments"
        ],
        "summary": "Add a new line to the shipment",
        "description": "Requires `Warehouse.Shipments.Write` privileges",
        "parameters": [
          {
            "name": "shipmentReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "relatedReference",
                  "skuReference",
                  "quantity"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Warehouse.Shipments.Requests.AddShipmentLineRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Shipments.Responses.ShipmentLineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/shipments/{shipmentReference}/lines/{lineReference}": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Get one line of a shipment by its reference",
        "description": "Requires `Warehouse.Shipments.Write` privileges",
        "parameters": [
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipmentReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Shipments.Responses.ShipmentLineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shipments"
        ],
        "summary": "Removes a line from the shipment",
        "description": "Requires `Warehouse.Shipments.Write` privileges",
        "parameters": [
          {
            "name": "shipmentReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/shipments/{shipmentReference}/reverse": {
      "post": {
        "tags": [
          "Shipments"
        ],
        "summary": "Reverse a shipment",
        "description": "This will undo the shipping and place the shipment back to pending status. Requires `Warehouse.Shipments.Write` privileges",
        "parameters": [
          {
            "name": "shipmentReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/shipments/{shipmentReference}/ship": {
      "post": {
        "tags": [
          "Shipments"
        ],
        "summary": "Ship a shipment",
        "description": "Requires `Warehouse.Shipments.Write` privileges",
        "parameters": [
          {
            "name": "shipmentReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/warehouse/shipments/lines/{lineReference}": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Get one line of a shipment by its reference",
        "description": "Requires `Warehouse.Shipments.Write` privileges",
        "parameters": [
          {
            "name": "lineReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse.Shipments.Responses.ShipmentLineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Http.HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Analytics.Requests.CloneReportRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Analytics.Requests.CreateReportRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Analytics.Responses.ReportResponse": {
        "required": [
          "datasetId",
          "editable",
          "embedUrl",
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "editable": {
            "type": "boolean"
          },
          "embedUrl": {
            "type": "string"
          },
          "datasetId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Analytics.Responses.TokenizedReportResponse": {
        "required": [
          "embedToken",
          "report"
        ],
        "type": "object",
        "properties": {
          "report": {
            "required": [
              "id",
              "name",
              "type",
              "editable",
              "embedUrl",
              "datasetId"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Analytics.Responses.ReportResponse"
              }
            ]
          },
          "embedToken": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Common.Events.AuditResponse": {
        "required": [
          "events"
        ],
        "type": "object",
        "properties": {
          "events": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Events.EventResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "Common.Events.EventResponse": {
        "required": [
          "aggregateId",
          "aggregateName",
          "author",
          "content",
          "eventId",
          "eventName",
          "majorVersion",
          "minorVersion",
          "occurredOn"
        ],
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid"
          },
          "eventName": {
            "type": "string"
          },
          "aggregateName": {
            "type": "string"
          },
          "aggregateId": {
            "type": "string"
          },
          "majorVersion": {
            "type": "integer",
            "format": "int32"
          },
          "minorVersion": {
            "type": "integer",
            "format": "int32"
          },
          "author": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "occurredOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Common.Responses.SearchApiKeyResponse": {
        "required": [
          "apiKey"
        ],
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Files.Responses.FileMetadataResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "fileName",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "readOnlyUri"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "fileName": {
            "type": "string"
          },
          "readOnlyUri": {
            "required": [
              "absolutePath",
              "absoluteUri",
              "localPath",
              "authority",
              "hostNameType",
              "isDefaultPort",
              "isFile",
              "isLoopback",
              "pathAndQuery",
              "segments",
              "isUnc",
              "host",
              "port",
              "query",
              "fragment",
              "scheme",
              "originalString",
              "dnsSafeHost",
              "idnHost",
              "isAbsoluteUri",
              "userEscaped",
              "userInfo"
            ],
            "type": "string",
            "format": "uri"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GenericList[Analytics.Responses.ReportResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Analytics.Responses.ReportResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Items.Products.Responses.ProductPropertyResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items.Products.Responses.ProductPropertyResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Items.Properties.Responses.OptionResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items.Properties.Responses.OptionResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Items.Skus.Responses.ValueResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items.Skus.Responses.ValueResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Notifications.App.Responses.SubscriptionResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notifications.App.Responses.SubscriptionResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Notifications.Emails.Responses.SubscriptionResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notifications.Emails.Responses.SubscriptionResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Notifications.Events.Responses.EventDefinitionResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notifications.Events.Responses.EventDefinitionResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Notifications.Events.Responses.VersionedEventDefinitionResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notifications.Events.Responses.VersionedEventDefinitionResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Notifications.Webhooks.Responses.NotificationAttemptResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notifications.Webhooks.Responses.NotificationAttemptResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Planning.PurchaseOrders.Responses.PurchaseOrderLineResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Planning.PurchaseOrders.Responses.PurchaseOrderLineResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Planning.SalesOrders.Responses.SalesOrderLineResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Planning.SalesOrders.Responses.SalesOrderLineResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Planning.Skus.Responses.DemandResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Planning.Skus.Responses.DemandResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Planning.Skus.Responses.SupplyResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Planning.Skus.Responses.SupplyResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Employees.Responses.EmployeeResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Employees.Responses.EmployeeResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.InterruptionTypes.Responses.InterruptionTypeResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.InterruptionTypes.Responses.InterruptionTypeResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.OperationAssignments.Responses.OperationAssignmentResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.OperationAssignments.Responses.OperationAssignmentResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Orders.Responses.ActionStepResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Orders.Responses.ActionStepResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Orders.Responses.InputResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Orders.Responses.InputResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Orders.Responses.InspectionStepResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Orders.Responses.InspectionStepResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Orders.Responses.InterruptionResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Orders.Responses.InterruptionResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Orders.Responses.OperationResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Orders.Responses.OperationResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Orders.Responses.OrderResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Orders.Responses.OrderResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Orders.Responses.OutputResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Orders.Responses.OutputResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Orders.Responses.RestrictionResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Orders.Responses.RestrictionResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Orders.Responses.StepResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Orders.Responses.StepResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Plans.Responses.PlanResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Plans.Responses.PlanResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.RecipeVersions.Responses.ActionStepResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.RecipeVersions.Responses.ActionStepResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.RecipeVersions.Responses.InputResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "required": [
                "id",
                "externalReference",
                "type",
                "when",
                "quantity",
                "frequency",
                "conditionFormula",
                "createdAt",
                "createdBy",
                "lastModifiedAt",
                "lastModifiedBy"
              ],
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.RawMaterialInputResponse"
                },
                {
                  "$ref": "#/components/schemas/Production.RecipeVersions.Responses.SemifinishedInputResponse"
                }
              ]
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.RecipeVersions.Responses.InspectionStepResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.RecipeVersions.Responses.InspectionStepResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.RecipeVersions.Responses.OperationResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.RecipeVersions.Responses.OperationResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.RecipeVersions.Responses.RestrictionResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.RecipeVersions.Responses.RestrictionResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.RecipeVersions.Responses.StepResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.RecipeVersions.Responses.StepResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.RecipeVersions.Responses.VersionResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.RecipeVersions.Responses.VersionResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Recipes.Responses.RecipeResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Recipes.Responses.RecipeResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Requests.Responses.InputResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Requests.Responses.InputResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Resources.Responses.CapabilityResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Resources.Responses.CapabilityResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Resources.Responses.ResourceResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Resources.Responses.ResourceResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Skus.Responses.MissingInputResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Skus.Responses.MissingInputResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Production.Skus.Responses.RequiredInputResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Skus.Responses.RequiredInputResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Users.Responses.UserResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Users.Responses.UserResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Warehouse.Receipts.Responses.ReceiptLineResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warehouse.Receipts.Responses.ReceiptLineResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Warehouse.Shipments.Responses.ShipmentLineResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warehouse.Shipments.Responses.ShipmentLineResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericList[Warehouse.Skus.Responses.StockUnitResponse]": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warehouse.Skus.Responses.StockUnitResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Items.Products.Requests.CreateAssignmentRequest": {
        "required": [
          "propertyReference",
          "required"
        ],
        "type": "object",
        "properties": {
          "propertyReference": {
            "type": "string"
          },
          "required": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Items.Products.Requests.CreateProductRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Items.Products.Requests.UpdateAssignmentRequest": {
        "required": [
          "required"
        ],
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Items.Products.Requests.UpdateProductRequest": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Items.Products.Responses.ProductPropertyResponse": {
        "required": [
          "product",
          "productId",
          "property",
          "propertyId",
          "required"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "product": {
            "required": [
              "id",
              "externalReference",
              "code",
              "name",
              "description",
              "deletedAt",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Items.Products.Responses.ProductResponse"
              }
            ],
            "nullable": true
          },
          "propertyId": {
            "type": "string"
          },
          "property": {
            "required": [
              "id",
              "externalReference",
              "name",
              "kind",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Items.Properties.Responses.PropertyResponse"
              }
            ],
            "nullable": true
          },
          "required": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Items.Products.Responses.ProductResponse": {
        "required": [
          "code",
          "createdAt",
          "createdBy",
          "deletedAt",
          "description",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Items.Properties.Enums.PropertyKind": {
        "enum": [
          "Decimal",
          "Text",
          "Boolean",
          "Enum",
          "Integer",
          "DateTime"
        ],
        "type": "string"
      },
      "Items.Properties.Requests.AddOptionRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Items.Properties.Requests.CreatePropertyRequest": {
        "required": [
          "kind",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Items.Properties.Enums.PropertyKind"
              }
            ]
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Items.Properties.Requests.UpdateOptionRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Items.Properties.Requests.UpdatePropertyRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Items.Properties.Responses.OptionResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name",
          "property",
          "propertyId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "propertyId": {
            "type": "string"
          },
          "property": {
            "required": [
              "id",
              "externalReference",
              "name",
              "kind",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Items.Properties.Responses.PropertyResponse"
              }
            ],
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Items.Properties.Responses.PropertyResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "externalReference",
          "id",
          "kind",
          "lastModifiedAt",
          "lastModifiedBy",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Items.Properties.Enums.PropertyKind"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Items.Skus.Enums.SkuStatus": {
        "enum": [
          "Invalid",
          "Valid"
        ],
        "type": "string"
      },
      "Items.Skus.Requests.AddValueRequest": {
        "required": [
          "propertyReference",
          "value"
        ],
        "type": "object",
        "properties": {
          "propertyReference": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Items.Skus.Requests.CreateSkuForProductRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items.Skus.Requests.AddValueRequest"
            },
            "nullable": true
          },
          "replenishmentMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.ReplenishmentMode"
              }
            ]
          },
          "replenishmentSource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.ReplenishmentSource"
              }
            ]
          },
          "manageLots": {
            "type": "boolean"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Items.Skus.Requests.CreateSkuRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "productReference": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items.Skus.Requests.AddValueRequest"
            },
            "nullable": true
          },
          "replenishmentMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.ReplenishmentMode"
              }
            ]
          },
          "replenishmentSource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.ReplenishmentSource"
              }
            ]
          },
          "manageLots": {
            "type": "boolean"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Items.Skus.Requests.FilterValueRequest": {
        "required": [
          "propertyReference",
          "value"
        ],
        "type": "object",
        "properties": {
          "propertyReference": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Items.Skus.Requests.SearchSkusByValuesRequest": {
        "required": [
          "filters",
          "productReference"
        ],
        "type": "object",
        "properties": {
          "productReference": {
            "type": "string",
            "nullable": true
          },
          "filters": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items.Skus.Requests.FilterValueRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "Items.Skus.Requests.UpdateSkuRequest": {
        "required": [
          "code",
          "name",
          "productReference"
        ],
        "type": "object",
        "properties": {
          "productReference": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Items.Skus.Requests.UpdateValueRequest": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Items.Skus.Responses.DuplicatesResponse": {
        "required": [
          "duplicates",
          "hasDuplicates"
        ],
        "type": "object",
        "properties": {
          "hasDuplicates": {
            "type": "boolean"
          },
          "duplicates": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items.Skus.Responses.SkuResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "Items.Skus.Responses.SkuResponse": {
        "required": [
          "code",
          "createdAt",
          "createdBy",
          "deletedAt",
          "description",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name",
          "product",
          "productId",
          "status",
          "validationErrors"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Items.Skus.Enums.SkuStatus"
              }
            ]
          },
          "validationErrors": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "required": [
              "id",
              "externalReference",
              "code",
              "name",
              "description",
              "deletedAt",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Items.Products.Responses.ProductResponse"
              }
            ],
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Items.Skus.Responses.ValueResponse": {
        "required": [
          "kind",
          "property",
          "propertyId",
          "sku",
          "skuId",
          "value"
        ],
        "type": "object",
        "properties": {
          "skuId": {
            "type": "string"
          },
          "sku": {
            "required": [
              "id",
              "externalReference",
              "code",
              "name",
              "description",
              "status",
              "validationErrors",
              "productId",
              "product",
              "deletedAt",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Items.Skus.Responses.SkuResponse"
              }
            ],
            "nullable": true
          },
          "propertyId": {
            "type": "string"
          },
          "property": {
            "required": [
              "id",
              "externalReference",
              "name",
              "kind",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Items.Properties.Responses.PropertyResponse"
              }
            ],
            "nullable": true
          },
          "value": {
            "type": "string"
          },
          "kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Items.Properties.Enums.PropertyKind"
              }
            ]
          },
          "enumValue": {
            "required": [
              "id",
              "externalReference",
              "name",
              "propertyId",
              "property",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Items.Properties.Responses.OptionResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Labels.Commands.BarcodeElement": {
        "required": [
          "height",
          "key",
          "width",
          "x",
          "y"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Labels.Commands.Element"
          }
        ],
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Labels.Commands.Element": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Labels.Responses.ElementType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Labels.Commands.FixedTextElement": {
        "required": [
          "fontSize",
          "text",
          "x",
          "y"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Labels.Commands.Element"
          }
        ],
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "fontSize": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Labels.Commands.QrCodeElement": {
        "required": [
          "height",
          "key",
          "width",
          "x",
          "y"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Labels.Commands.Element"
          }
        ],
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Labels.Commands.ShapeElement": {
        "required": [
          "height",
          "width",
          "x",
          "y"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Labels.Commands.Element"
          }
        ],
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Labels.Commands.VariableTextElement": {
        "required": [
          "fontSize",
          "key",
          "x",
          "y"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Labels.Commands.Element"
          }
        ],
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "fontSize": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Labels.Requests.CreateTemplateRequest": {
        "required": [
          "height",
          "type",
          "width"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Labels.Responses.EntityType"
              }
            ]
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Labels.Responses.BarcodeElementResponse": {
        "required": [
          "height",
          "id",
          "key",
          "width",
          "x",
          "y"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Labels.Responses.TemplateElementResponse"
          }
        ],
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Labels.Responses.ElementType": {
        "enum": [
          "FixedText",
          "VariableText",
          "QrCode",
          "Barcode",
          "Shape"
        ],
        "type": "string"
      },
      "Labels.Responses.EntityType": {
        "enum": [
          "ProductionOperation"
        ],
        "type": "string"
      },
      "Labels.Responses.FixedTextElementResponse": {
        "required": [
          "fontSize",
          "id",
          "text",
          "x",
          "y"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Labels.Responses.TemplateElementResponse"
          }
        ],
        "properties": {
          "fontSize": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Labels.Responses.QrCodeElementResponse": {
        "required": [
          "height",
          "id",
          "key",
          "width",
          "x",
          "y"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Labels.Responses.TemplateElementResponse"
          }
        ],
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Labels.Responses.ShapeElementResponse": {
        "required": [
          "height",
          "id",
          "width",
          "x",
          "y"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Labels.Responses.TemplateElementResponse"
          }
        ],
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Labels.Responses.TemplateElementResponse": {
        "required": [
          "id",
          "type",
          "x",
          "y"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Labels.Responses.ElementType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Labels.Responses.TemplateResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "elements",
          "externalReference",
          "height",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "type",
          "width"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Labels.Responses.EntityType"
              }
            ]
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "elements": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "required": [
                "id",
                "x",
                "y",
                "type"
              ],
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Labels.Responses.ShapeElementResponse"
                },
                {
                  "$ref": "#/components/schemas/Labels.Responses.FixedTextElementResponse"
                },
                {
                  "$ref": "#/components/schemas/Labels.Responses.VariableTextElementResponse"
                },
                {
                  "$ref": "#/components/schemas/Labels.Responses.QrCodeElementResponse"
                },
                {
                  "$ref": "#/components/schemas/Labels.Responses.BarcodeElementResponse"
                }
              ]
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Labels.Responses.VariableTextElementResponse": {
        "required": [
          "fontSize",
          "id",
          "key",
          "x",
          "y"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Labels.Responses.TemplateElementResponse"
          }
        ],
        "properties": {
          "fontSize": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Microsoft.AspNetCore.Http.HttpValidationProblemDetails": {
        "required": [
          "detail",
          "errors",
          "extensions",
          "instance",
          "status",
          "title",
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
          }
        ],
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "additionalProperties": {}
      },
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "required": [
          "detail",
          "extensions",
          "instance",
          "status",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "Notifications.App.Responses.NotificationResponse": {
        "required": [
          "createdAt",
          "entity",
          "entityId",
          "eventName",
          "id",
          "readAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "eventName": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "entityId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "readAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Notifications.App.Responses.NotificationsResponse": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages",
          "totalUnreadCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notifications.App.Responses.NotificationResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalUnreadCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Notifications.App.Responses.SubscriptionResponse": {
        "required": [
          "email",
          "eventName",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "eventName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Notifications.Emails.Responses.SubscriptionResponse": {
        "required": [
          "email",
          "eventName",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "eventName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Notifications.Events.Responses.EventDefinitionResponse": {
        "required": [
          "eventName"
        ],
        "type": "object",
        "properties": {
          "eventName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Notifications.Events.Responses.EventResponse": {
        "required": [
          "entity",
          "entityId",
          "eventId",
          "eventName",
          "majorVersion",
          "minorVersion",
          "occurredOn",
          "payload"
        ],
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid"
          },
          "eventName": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "entityId": {
            "type": "string"
          },
          "occurredOn": {
            "type": "string",
            "format": "date-time"
          },
          "majorVersion": {
            "type": "integer",
            "format": "int32"
          },
          "minorVersion": {
            "type": "integer",
            "format": "int32"
          },
          "payload": {}
        },
        "additionalProperties": false
      },
      "Notifications.Events.Responses.VersionedEventDefinitionResponse": {
        "required": [
          "eventName",
          "eventVersion"
        ],
        "type": "object",
        "properties": {
          "eventName": {
            "type": "string"
          },
          "eventVersion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Notifications.Webhooks.Enums.WebhookStatus": {
        "enum": [
          "Pending",
          "Success",
          "Failure"
        ],
        "type": "string"
      },
      "Notifications.Webhooks.Requests.SubscribeRequest": {
        "required": [
          "endpoint",
          "eventName",
          "eventVersion"
        ],
        "type": "object",
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "eventName": {
            "type": "string"
          },
          "eventVersion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Notifications.Webhooks.Responses.NotificationAttemptResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "errorMessage",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "responseBody",
          "responseStatusCode",
          "success"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "responseStatusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Net.HttpStatusCode"
              }
            ],
            "nullable": true
          },
          "responseBody": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Notifications.Webhooks.Responses.NotificationResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "endpoint",
          "event",
          "eventId",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "nextAttemptAt",
          "status",
          "subscriptionId",
          "timesAttempted"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "subscriptionId": {
            "type": "string",
            "nullable": true
          },
          "eventId": {
            "type": "string"
          },
          "event": {
            "required": [
              "eventId",
              "eventName",
              "entity",
              "entityId",
              "occurredOn",
              "majorVersion",
              "minorVersion",
              "payload"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Notifications.Events.Responses.EventResponse"
              }
            ],
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Notifications.Webhooks.Enums.WebhookStatus"
              }
            ]
          },
          "endpoint": {
            "type": "string"
          },
          "timesAttempted": {
            "type": "integer",
            "format": "int32"
          },
          "nextAttemptAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Notifications.Webhooks.Responses.SubscriptionResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "endpoint",
          "eventName",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "majorVersion"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "endpoint": {
            "required": [
              "absolutePath",
              "absoluteUri",
              "localPath",
              "authority",
              "hostNameType",
              "isDefaultPort",
              "isFile",
              "isLoopback",
              "pathAndQuery",
              "segments",
              "isUnc",
              "host",
              "port",
              "query",
              "fragment",
              "scheme",
              "originalString",
              "dnsSafeHost",
              "idnHost",
              "isAbsoluteUri",
              "userEscaped",
              "userInfo"
            ],
            "type": "string",
            "format": "uri"
          },
          "eventName": {
            "type": "string"
          },
          "majorVersion": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Files.Responses.FileMetadataResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Files.Responses.FileMetadataResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Items.Products.Responses.ProductResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items.Products.Responses.ProductResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Items.Properties.Responses.PropertyResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items.Properties.Responses.PropertyResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Items.Skus.Responses.SkuResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items.Skus.Responses.SkuResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Labels.Responses.TemplateResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Labels.Responses.TemplateResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Notifications.Webhooks.Responses.NotificationResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notifications.Webhooks.Responses.NotificationResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Notifications.Webhooks.Responses.SubscriptionResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notifications.Webhooks.Responses.SubscriptionResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Planning.Customers.Responses.CustomerResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Planning.Customers.Responses.CustomerResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Planning.Products.Responses.ProductResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Planning.Products.Responses.ProductResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Planning.PurchaseOrders.Responses.PurchaseOrderLineResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Planning.PurchaseOrders.Responses.PurchaseOrderLineResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Planning.PurchaseOrders.Responses.PurchaseOrderResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Planning.PurchaseOrders.Responses.PurchaseOrderResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Planning.SalesOrders.Responses.SalesOrderLineResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Planning.SalesOrders.Responses.SalesOrderLineResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Planning.SalesOrders.Responses.SalesOrderResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Planning.SalesOrders.Responses.SalesOrderResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Planning.Skus.Responses.SkuResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Planning.Skus.Responses.SkuResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Planning.Suppliers.Responses.SupplierResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Planning.Suppliers.Responses.SupplierResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Production.OperationTypes.Responses.OperationTypeResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.OperationTypes.Responses.OperationTypeResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Production.Orders.Responses.OrderResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Orders.Responses.OrderResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Production.PresenceAssignments.Responses.ResourceAssignmentResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.PresenceAssignments.Responses.ResourceAssignmentResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Production.Recipes.Responses.RecipeResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Recipes.Responses.RecipeResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Production.Requests.Responses.RequestResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Requests.Responses.RequestResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Production.ResourceGroups.Responses.GroupResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.ResourceGroups.Responses.GroupResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Production.Resources.Responses.ResourceResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Resources.Responses.ResourceResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Warehouse.Locations.Responses.LocationResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warehouse.Locations.Responses.LocationResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Warehouse.Receipts.Responses.ReceiptResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warehouse.Receipts.Responses.ReceiptResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedList[Warehouse.Shipments.Responses.ShipmentResponse]": {
        "required": [
          "pageNumber",
          "results",
          "totalCount",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "results": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warehouse.Shipments.Responses.ShipmentResponse"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Planning.Customers.Requests.CreateCustomerRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the customer."
          },
          "externalReference": {
            "type": "string",
            "description": "An optional reference to use in the integration (i.e. the code from an ERP system)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Planning.Customers.Requests.UpdateCustomerRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Planning.Customers.Responses.CustomerResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Planning.Products.Responses.ProductResponse": {
        "required": [
          "code",
          "currentAvailableStock",
          "externalReference",
          "id",
          "incomingStock",
          "name",
          "outgoingStock",
          "projectedAvailableStock",
          "stock"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "stock": {
            "type": "number",
            "format": "double"
          },
          "incomingStock": {
            "type": "number",
            "format": "double"
          },
          "outgoingStock": {
            "type": "number",
            "format": "double"
          },
          "currentAvailableStock": {
            "type": "number",
            "format": "double"
          },
          "projectedAvailableStock": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Planning.PurchaseOrders.Requests.CreatePurchaseOrderLineRequest": {
        "required": [
          "quantity",
          "skuReference"
        ],
        "type": "object",
        "properties": {
          "skuReference": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "lineNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "expectedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Planning.PurchaseOrders.Requests.CreatePurchaseOrderRequest": {
        "required": [
          "supplierReference"
        ],
        "type": "object",
        "properties": {
          "supplierReference": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Planning.PurchaseOrders.Requests.UpdatePurchaseOrderLineRequest": {
        "required": [
          "expectedAt",
          "notes",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "expectedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Planning.PurchaseOrders.Requests.UpdatePurchaseOrderRequest": {
        "required": [
          "code",
          "name",
          "notes",
          "supplierReference"
        ],
        "type": "object",
        "properties": {
          "supplierReference": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Planning.PurchaseOrders.Responses.PurchaseOrderLineResponse": {
        "required": [
          "code",
          "completed",
          "createdAt",
          "createdBy",
          "expectedAt",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "notes",
          "number",
          "order",
          "orderId",
          "pendingQuantity",
          "quantity",
          "receivedQuantity",
          "sku",
          "skuId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "order": {
            "required": [
              "id",
              "externalReference",
              "supplierId",
              "supplier",
              "code",
              "name",
              "notes",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.PurchaseOrders.Responses.PurchaseOrderResponse"
              }
            ],
            "nullable": true
          },
          "skuId": {
            "type": "string"
          },
          "sku": {
            "required": [
              "id",
              "externalReference",
              "code",
              "name",
              "stock",
              "incomingStock",
              "outgoingStock",
              "currentAvailableStock",
              "projectedAvailableStock",
              "replenishmentStrategy",
              "managesLots",
              "demand",
              "supply"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.SkuResponse"
              }
            ],
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "pendingQuantity": {
            "type": "number",
            "format": "double"
          },
          "receivedQuantity": {
            "type": "number",
            "format": "double"
          },
          "completed": {
            "type": "boolean"
          },
          "expectedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Planning.PurchaseOrders.Responses.PurchaseOrderResponse": {
        "required": [
          "code",
          "createdAt",
          "createdBy",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name",
          "notes",
          "supplier",
          "supplierId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "supplierId": {
            "type": "string"
          },
          "supplier": {
            "required": [
              "id",
              "externalReference",
              "name",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Suppliers.Responses.SupplierResponse"
              }
            ],
            "nullable": true
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Planning.SalesOrders.Requests.CreateSalesOrderLineRequest": {
        "required": [
          "quantity",
          "released",
          "skuReference"
        ],
        "type": "object",
        "properties": {
          "skuReference": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "released": {
            "type": "boolean"
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lineNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Planning.SalesOrders.Requests.CreateSalesOrderRequest": {
        "required": [
          "customerReference"
        ],
        "type": "object",
        "properties": {
          "customerReference": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Planning.SalesOrders.Requests.UpdateSalesOrderLineRequest": {
        "required": [
          "dueAt",
          "notes",
          "quantity",
          "skuReference"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "skuReference": {
            "type": "string"
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Planning.SalesOrders.Requests.UpdateSalesOrderRequest": {
        "required": [
          "code",
          "customerReference",
          "name",
          "notes"
        ],
        "type": "object",
        "properties": {
          "customerReference": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Planning.SalesOrders.Responses.SalesOrderLineResponse": {
        "required": [
          "availableQuantity",
          "code",
          "createdAt",
          "createdBy",
          "dueAt",
          "expectedAt",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "notes",
          "number",
          "order",
          "orderId",
          "pendingQuantity",
          "plannedQuantity",
          "quantity",
          "releasedAt",
          "shippedQuantity",
          "sku",
          "skuId",
          "status",
          "stockStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string"
          },
          "order": {
            "required": [
              "id",
              "externalReference",
              "customerId",
              "customer",
              "code",
              "name",
              "notes",
              "status",
              "stockStatus",
              "dueAt",
              "expectedAt",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.SalesOrders.Responses.SalesOrderResponse"
              }
            ],
            "nullable": true
          },
          "skuId": {
            "type": "string"
          },
          "sku": {
            "required": [
              "id",
              "externalReference",
              "code",
              "name",
              "stock",
              "incomingStock",
              "outgoingStock",
              "currentAvailableStock",
              "projectedAvailableStock",
              "replenishmentStrategy",
              "managesLots",
              "demand",
              "supply"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.SkuResponse"
              }
            ],
            "nullable": true
          },
          "code": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "pendingQuantity": {
            "type": "number",
            "format": "double"
          },
          "shippedQuantity": {
            "type": "number",
            "format": "double"
          },
          "availableQuantity": {
            "type": "number",
            "format": "double"
          },
          "plannedQuantity": {
            "type": "number",
            "format": "double"
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expectedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "releasedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.SalesOrders.Responses.SalesOrderStatus"
              }
            ]
          },
          "stockStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.StockStatus"
              }
            ],
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Planning.SalesOrders.Responses.SalesOrderResponse": {
        "required": [
          "code",
          "createdAt",
          "createdBy",
          "customer",
          "customerId",
          "dueAt",
          "expectedAt",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name",
          "notes",
          "status",
          "stockStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string"
          },
          "customer": {
            "required": [
              "id",
              "externalReference",
              "name",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Customers.Responses.CustomerResponse"
              }
            ],
            "nullable": true
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.SalesOrders.Responses.SalesOrderStatus"
              }
            ]
          },
          "stockStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.StockStatus"
              }
            ],
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expectedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Planning.SalesOrders.Responses.SalesOrderStatus": {
        "enum": [
          "Draft",
          "Pending",
          "PartiallyDelivered",
          "Delivered",
          "Cancelled"
        ],
        "type": "string"
      },
      "Planning.Skus.Requests.UpdateSkuPlanningInfoRequest": {
        "required": [
          "amountMultiple",
          "minimumAmount",
          "mode",
          "reorderPoint",
          "safetyStock",
          "source"
        ],
        "type": "object",
        "properties": {
          "safetyStock": {
            "type": "number",
            "format": "double"
          },
          "reorderPoint": {
            "type": "number",
            "format": "double"
          },
          "minimumAmount": {
            "type": "number",
            "format": "double"
          },
          "amountMultiple": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.ReplenishmentMode"
              }
            ]
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.ReplenishmentSource"
              }
            ]
          },
          "managesLots": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Planning.Skus.Responses.DemandNature": {
        "enum": [
          "SalesOrder",
          "ProductionOrder",
          "ProductionRequest",
          "ProductionForecast"
        ],
        "type": "string"
      },
      "Planning.Skus.Responses.DemandResponse": {
        "required": [
          "availableQuantity",
          "expectedAt",
          "id",
          "lotNumber",
          "nature",
          "neededAt",
          "plannedQuantity",
          "priority",
          "quantity",
          "replenishmentMode",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "lotNumber": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "nature": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.DemandNature"
              }
            ]
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "replenishmentMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.ReplenishmentMode"
              }
            ]
          },
          "availableQuantity": {
            "type": "number",
            "format": "double"
          },
          "plannedQuantity": {
            "type": "number",
            "format": "double"
          },
          "neededAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expectedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.StockStatus"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Planning.Skus.Responses.ReplenishmentMode": {
        "enum": [
          "Direct",
          "Batched"
        ],
        "type": "string"
      },
      "Planning.Skus.Responses.ReplenishmentSource": {
        "enum": [
          "Unknown",
          "Manufacture",
          "Purchase"
        ],
        "type": "string"
      },
      "Planning.Skus.Responses.ReplenishmentStrategyResponse": {
        "required": [
          "amountMultiple",
          "minimumAmount",
          "mode",
          "reorderPoint",
          "safetyStock",
          "source"
        ],
        "type": "object",
        "properties": {
          "safetyStock": {
            "type": "number",
            "format": "double"
          },
          "reorderPoint": {
            "type": "number",
            "format": "double"
          },
          "minimumAmount": {
            "type": "number",
            "format": "double"
          },
          "amountMultiple": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.ReplenishmentMode"
              }
            ]
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.ReplenishmentSource"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Planning.Skus.Responses.SkuResponse": {
        "required": [
          "code",
          "currentAvailableStock",
          "demand",
          "externalReference",
          "id",
          "incomingStock",
          "managesLots",
          "name",
          "outgoingStock",
          "projectedAvailableStock",
          "replenishmentStrategy",
          "stock",
          "supply"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "stock": {
            "type": "number",
            "format": "double"
          },
          "incomingStock": {
            "type": "number",
            "format": "double"
          },
          "outgoingStock": {
            "type": "number",
            "format": "double"
          },
          "currentAvailableStock": {
            "type": "number",
            "format": "double"
          },
          "projectedAvailableStock": {
            "type": "number",
            "format": "double"
          },
          "replenishmentStrategy": {
            "required": [
              "safetyStock",
              "reorderPoint",
              "minimumAmount",
              "amountMultiple",
              "mode",
              "source"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.ReplenishmentStrategyResponse"
              }
            ]
          },
          "managesLots": {
            "type": "boolean"
          },
          "demand": {
            "required": [
              "results",
              "totalCount"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/GenericList[Planning.Skus.Responses.DemandResponse]"
              }
            ]
          },
          "supply": {
            "required": [
              "results",
              "totalCount"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/GenericList[Planning.Skus.Responses.SupplyResponse]"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Planning.Skus.Responses.StockStatus": {
        "enum": [
          "Pending",
          "PartiallyAllocated",
          "FullyAllocated",
          "Ready"
        ],
        "type": "string"
      },
      "Planning.Skus.Responses.SupplyNature": {
        "enum": [
          "PurchaseOrder",
          "ProductionOrder",
          "ProductionRequest",
          "ProductionForecast",
          "PurchaseForecast"
        ],
        "type": "string"
      },
      "Planning.Skus.Responses.SupplyResponse": {
        "required": [
          "expectedAt",
          "id",
          "lotNumber",
          "nature",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nature": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Planning.Skus.Responses.SupplyNature"
              }
            ]
          },
          "lotNumber": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "expectedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Planning.Suppliers.Requests.CreateSupplierRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Planning.Suppliers.Requests.UpdateSupplierRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Planning.Suppliers.Responses.SupplierResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Common.Enums.InputMoment": {
        "enum": [
          "Beginning",
          "End",
          "PerUnit"
        ],
        "type": "string"
      },
      "Production.Common.Enums.InspectionType": {
        "enum": [
          "Simple",
          "Boolean",
          "Decimal",
          "Text"
        ],
        "type": "string"
      },
      "Production.Common.Enums.RestrictionType": {
        "enum": [
          "Full",
          "Partial",
          "NonBlocking"
        ],
        "type": "string"
      },
      "Production.Common.Enums.StepMoment": {
        "enum": [
          "Once",
          "PerUnit"
        ],
        "type": "string"
      },
      "Production.Common.Enums.StepType": {
        "enum": [
          "Action",
          "Inspection"
        ],
        "type": "string"
      },
      "Production.Common.Enums.StockStatus": {
        "enum": [
          "Pending",
          "Planned",
          "Ready"
        ],
        "type": "string"
      },
      "Production.Employees.Requests.AddUsualResourceRequest": {
        "required": [
          "resourceReference"
        ],
        "type": "object",
        "properties": {
          "resourceReference": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Employees.Requests.CreateEmployeeRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "emails": {
            "required": [
              "count",
              "isReadOnly"
            ],
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Employees.Requests.UpdateEmployeeRequest": {
        "required": [
          "active",
          "emails",
          "firstName",
          "lastName",
          "username"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "emails": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "Production.Employees.Responses.EmployeeResponse": {
        "required": [
          "active",
          "createdAt",
          "createdBy",
          "emails",
          "externalReference",
          "firstName",
          "fullName",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "lastName",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "fullName": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "emails": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Production.InterruptionTypes.Requests.CreateInterruptionTypeRequest": {
        "required": [
          "name",
          "planned"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "planned": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.InterruptionTypes.Requests.UpdateInterruptionTypeRequest": {
        "required": [
          "name",
          "planned"
        ],
        "type": "object",
        "properties": {
          "planned": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.InterruptionTypes.Responses.InterruptionTypeResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "description",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name",
          "planned"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "planned": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.OperationAssignments.Requests.CreateAssignmentRequest": {
        "required": [
          "employeeReference",
          "startedAt"
        ],
        "type": "object",
        "properties": {
          "employeeReference": {
            "type": "string"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.OperationAssignments.Requests.RecalculateAssignmentsRequest": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Production.OperationAssignments.Requests.UpdateAssignmentRequest": {
        "required": [
          "finishedAt",
          "startedAt"
        ],
        "type": "object",
        "properties": {
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Production.OperationAssignments.Responses.OperationAssignmentResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "employee",
          "employeeId",
          "externalReference",
          "finishedAt",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "operation",
          "operationId",
          "startedAt",
          "totalEffectiveMinutes",
          "totalElapsedMinutes"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "operationId": {
            "type": "string"
          },
          "operation": {
            "required": [
              "id",
              "externalReference",
              "orderId",
              "order",
              "name",
              "lotNumber",
              "relativeAmount",
              "positionX",
              "positionY",
              "restrictedBy",
              "typeId",
              "type",
              "resourceId",
              "resource",
              "status",
              "stockStatus",
              "stockExpectedAt",
              "plannedQuantity",
              "completedQuantity",
              "plannedDurationMinutes",
              "plannedManpowerMinutes",
              "completedManpowerMinutes",
              "completedDurationMinutes",
              "realDurationMinutes",
              "realManpowerMinutes",
              "completionPercent",
              "efficiency",
              "manpowerEfficiency",
              "startedAt",
              "finishedAt",
              "targetedAt",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Orders.Responses.OperationResponse"
              }
            ],
            "nullable": true
          },
          "employeeId": {
            "type": "string"
          },
          "employee": {
            "required": [
              "id",
              "externalReference",
              "username",
              "active",
              "fullName",
              "firstName",
              "lastName",
              "emails",
              "createdBy",
              "createdAt",
              "lastModifiedBy",
              "lastModifiedAt"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Employees.Responses.EmployeeResponse"
              }
            ],
            "nullable": true
          },
          "totalElapsedMinutes": {
            "type": "number",
            "format": "double"
          },
          "totalEffectiveMinutes": {
            "type": "number",
            "format": "double"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.OperationTypes.Requests.CreateOperationTypeRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.OperationTypes.Requests.UpdateOperationTypeRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.OperationTypes.Responses.OperationTypeResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "description",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Enums.InputType": {
        "enum": [
          "RawMaterial",
          "StockSemifinished",
          "InlineSemifinished"
        ],
        "type": "string"
      },
      "Production.Orders.Enums.OperationStatus": {
        "enum": [
          "Pending",
          "Planned",
          "Paused",
          "InProcess",
          "Finished",
          "Cancelled"
        ],
        "type": "string"
      },
      "Production.Orders.Enums.Status": {
        "enum": [
          "Created",
          "Planned",
          "Paused",
          "InProcess",
          "Finished",
          "Cancelled"
        ],
        "type": "string"
      },
      "Production.Orders.Requests.AddActionStepRequest": {
        "required": [
          "name",
          "when"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepMoment"
              }
            ]
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.AddInputRequest": {
        "required": [
          "quantity",
          "skuReference",
          "when"
        ],
        "type": "object",
        "properties": {
          "skuReference": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.InputMoment"
              }
            ]
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.AddInspectionStepRequest": {
        "required": [
          "inspectionType",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "inspectionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.InspectionType"
              }
            ]
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.AddInterruptionRequest": {
        "required": [
          "typeReference"
        ],
        "type": "object",
        "properties": {
          "typeReference": {
            "type": "string"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.AddOperationRequest": {
        "required": [
          "name",
          "operationTypeReference"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "operationTypeReference": {
            "type": "string"
          },
          "relativeAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "resourceReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.AddRestrictionRequest": {
        "required": [
          "fromReference",
          "toReference",
          "type"
        ],
        "type": "object",
        "properties": {
          "fromReference": {
            "type": "string"
          },
          "toReference": {
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.RestrictionType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.CompleteInspectionStepRequest": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.ConvertInputRequest": {
        "required": [
          "recipeReference",
          "type"
        ],
        "type": "object",
        "properties": {
          "recipeReference": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Orders.Enums.InputType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.CreateOrderRequest": {
        "required": [
          "plannedQuantity",
          "requestReference"
        ],
        "type": "object",
        "properties": {
          "requestReference": {
            "type": "string"
          },
          "plannedQuantity": {
            "type": "number",
            "format": "double"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "lotNumber": {
            "type": "string",
            "nullable": true
          },
          "recipeReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.GetOrdersRequestMode": {
        "enum": [
          "Standard",
          "Sequencing"
        ],
        "type": "string"
      },
      "Production.Orders.Requests.RecordInputDetail": {
        "required": [
          "inputReference",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "inputReference": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.RecordOutputRequest": {
        "required": [
          "completedQuantity",
          "inputs",
          "rejectedQuantity"
        ],
        "type": "object",
        "properties": {
          "completedQuantity": {
            "type": "number",
            "format": "double"
          },
          "rejectedQuantity": {
            "type": "number",
            "format": "double"
          },
          "inputs": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Orders.Requests.RecordInputDetail"
            }
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.SequenceOrderRequest": {
        "type": "object",
        "properties": {
          "targetDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.UndoFinishOperationRequest": {
        "required": [
          "interruptionTypeReference"
        ],
        "type": "object",
        "properties": {
          "interruptionTypeReference": {
            "type": "string"
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.UpdateActionStepRequest": {
        "required": [
          "minutesDuration",
          "minutesWorkload",
          "name",
          "when"
        ],
        "type": "object",
        "properties": {
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepMoment"
              }
            ]
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.UpdateInputRequest": {
        "required": [
          "quantity",
          "skuReference",
          "when"
        ],
        "type": "object",
        "properties": {
          "skuReference": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.InputMoment"
              }
            ]
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.UpdateInspectionStepRequest": {
        "required": [
          "inspectionType",
          "minutesDuration",
          "minutesWorkload",
          "name"
        ],
        "type": "object",
        "properties": {
          "inspectionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.InspectionType"
              }
            ]
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.UpdateInterruptionRequest": {
        "required": [
          "finishedAt",
          "startedAt",
          "typeReference"
        ],
        "type": "object",
        "properties": {
          "typeReference": {
            "type": "string"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.UpdateOperationRequest": {
        "required": [
          "name",
          "operationTypeReference",
          "positionX",
          "positionY",
          "relativeAmount",
          "resourceReference"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "operationTypeReference": {
            "type": "string"
          },
          "relativeAmount": {
            "type": "number",
            "format": "double"
          },
          "positionX": {
            "type": "number",
            "format": "double"
          },
          "positionY": {
            "type": "number",
            "format": "double"
          },
          "resourceReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.UpdateOrderRequest": {
        "required": [
          "plannedQuantity"
        ],
        "type": "object",
        "properties": {
          "plannedQuantity": {
            "type": "number",
            "format": "double"
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "targetedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Requests.UpdateRestrictionRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.RestrictionType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Responses.ActionStepResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "executionOrder",
          "externalReference",
          "frequency",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "minutesDuration",
          "minutesWorkload",
          "name",
          "notes",
          "type",
          "when"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepMoment"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepType"
              }
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "executionOrder": {
            "type": "integer",
            "format": "int32"
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Responses.InputResponse": {
        "required": [
          "consumedQuantity",
          "createdAt",
          "createdBy",
          "externalReference",
          "frequency",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "operationId",
          "pendingQuantity",
          "plannedQuantity",
          "plannedQuantityPerUnit",
          "sku",
          "skuId",
          "status",
          "stockExpectedAt",
          "type",
          "when"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "skuId": {
            "type": "string"
          },
          "sku": {
            "required": [
              "id",
              "externalReference",
              "code",
              "name",
              "status",
              "productId"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Skus.Responses.SkuResponse"
              }
            ],
            "nullable": true
          },
          "operationId": {
            "type": "string"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.InputMoment"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Orders.Enums.InputType"
              }
            ]
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StockStatus"
              }
            ]
          },
          "stockExpectedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedQuantity": {
            "type": "number",
            "format": "double"
          },
          "plannedQuantityPerUnit": {
            "type": "number",
            "format": "double"
          },
          "consumedQuantity": {
            "type": "number",
            "format": "double"
          },
          "pendingQuantity": {
            "type": "number",
            "format": "double"
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Responses.InspectionStepResponse": {
        "required": [
          "completedAt",
          "completedBy",
          "createdAt",
          "createdBy",
          "externalReference",
          "frequency",
          "id",
          "inspectionType",
          "lastModifiedAt",
          "lastModifiedBy",
          "minutesDuration",
          "minutesWorkload",
          "name",
          "notes",
          "result",
          "type",
          "when"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepMoment"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepType"
              }
            ]
          },
          "inspectionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.InspectionType"
              }
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedBy": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Responses.InterruptionResponse": {
        "required": [
          "comments",
          "createdAt",
          "createdBy",
          "externalReference",
          "finishedAt",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "operation",
          "operationId",
          "startedAt",
          "totalElapsedMinutes",
          "type",
          "typeId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "operationId": {
            "type": "string"
          },
          "operation": {
            "required": [
              "id",
              "externalReference",
              "orderId",
              "order",
              "name",
              "lotNumber",
              "relativeAmount",
              "positionX",
              "positionY",
              "restrictedBy",
              "typeId",
              "type",
              "resourceId",
              "resource",
              "status",
              "stockStatus",
              "stockExpectedAt",
              "plannedQuantity",
              "completedQuantity",
              "plannedDurationMinutes",
              "plannedManpowerMinutes",
              "completedManpowerMinutes",
              "completedDurationMinutes",
              "realDurationMinutes",
              "realManpowerMinutes",
              "completionPercent",
              "efficiency",
              "manpowerEfficiency",
              "startedAt",
              "finishedAt",
              "targetedAt",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Orders.Responses.OperationResponse"
              }
            ],
            "nullable": true
          },
          "typeId": {
            "type": "string"
          },
          "type": {
            "required": [
              "id",
              "externalReference",
              "name",
              "description",
              "planned",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.InterruptionTypes.Responses.InterruptionTypeResponse"
              }
            ],
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalElapsedMinutes": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Responses.OperationResponse": {
        "required": [
          "completedDurationMinutes",
          "completedManpowerMinutes",
          "completedQuantity",
          "completionPercent",
          "createdAt",
          "createdBy",
          "efficiency",
          "externalReference",
          "finishedAt",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "lotNumber",
          "manpowerEfficiency",
          "name",
          "order",
          "orderId",
          "plannedDurationMinutes",
          "plannedManpowerMinutes",
          "plannedQuantity",
          "positionX",
          "positionY",
          "realDurationMinutes",
          "realManpowerMinutes",
          "relativeAmount",
          "resource",
          "resourceId",
          "restrictedBy",
          "startedAt",
          "status",
          "stockExpectedAt",
          "stockStatus",
          "targetedAt",
          "type",
          "typeId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string"
          },
          "order": {
            "required": [
              "id",
              "externalReference",
              "lotNumber",
              "skuId",
              "sku",
              "requestId",
              "requester",
              "recipeId",
              "recipe",
              "plannedQuantity",
              "completedQuantity",
              "rejectedQuantity",
              "status",
              "notes",
              "dueAt",
              "plannedAt",
              "startedAt",
              "cancelledAt",
              "finishedAt",
              "targetedAt",
              "calculatedTargetedAt",
              "stockStatus",
              "stockExpectedAt",
              "plannedDurationMinutes",
              "plannedManpowerMinutes",
              "completedMinutesWorkload",
              "completedMinutesDuration",
              "realDurationMinutes",
              "realManpowerMinutes",
              "completionPercent",
              "efficiency",
              "manpowerEfficiency",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Orders.Responses.OrderResponse"
              }
            ],
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "lotNumber": {
            "type": "string"
          },
          "relativeAmount": {
            "type": "number",
            "format": "double"
          },
          "positionX": {
            "type": "number",
            "format": "double"
          },
          "positionY": {
            "type": "number",
            "format": "double"
          },
          "restrictedBy": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Orders.Responses.RestrictionResponse"
            }
          },
          "typeId": {
            "type": "string"
          },
          "type": {
            "required": [
              "id",
              "externalReference",
              "name",
              "description",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.OperationTypes.Responses.OperationTypeResponse"
              }
            ],
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "resource": {
            "required": [
              "id",
              "externalReference",
              "name",
              "description",
              "groupId",
              "group",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Resources.Responses.ResourceResponse"
              }
            ],
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Orders.Enums.OperationStatus"
              }
            ]
          },
          "stockStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StockStatus"
              }
            ]
          },
          "stockExpectedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedQuantity": {
            "type": "number",
            "format": "double"
          },
          "completedQuantity": {
            "type": "number",
            "format": "double"
          },
          "plannedDurationMinutes": {
            "type": "number",
            "format": "double"
          },
          "plannedManpowerMinutes": {
            "type": "number",
            "format": "double"
          },
          "completedManpowerMinutes": {
            "type": "number",
            "format": "double"
          },
          "completedDurationMinutes": {
            "type": "number",
            "format": "double"
          },
          "realDurationMinutes": {
            "type": "number",
            "format": "double"
          },
          "realManpowerMinutes": {
            "type": "number",
            "format": "double"
          },
          "completionPercent": {
            "type": "number",
            "format": "double"
          },
          "efficiency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "manpowerEfficiency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "targetedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Responses.OrderResponse": {
        "required": [
          "calculatedTargetedAt",
          "cancelledAt",
          "completedMinutesDuration",
          "completedMinutesWorkload",
          "completedQuantity",
          "completionPercent",
          "createdAt",
          "createdBy",
          "dueAt",
          "efficiency",
          "externalReference",
          "finishedAt",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "lotNumber",
          "manpowerEfficiency",
          "notes",
          "plannedAt",
          "plannedDurationMinutes",
          "plannedManpowerMinutes",
          "plannedQuantity",
          "realDurationMinutes",
          "realManpowerMinutes",
          "recipe",
          "recipeId",
          "rejectedQuantity",
          "requester",
          "requestId",
          "sku",
          "skuId",
          "startedAt",
          "status",
          "stockExpectedAt",
          "stockStatus",
          "targetedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "lotNumber": {
            "type": "string"
          },
          "skuId": {
            "type": "string"
          },
          "sku": {
            "required": [
              "id",
              "externalReference",
              "code",
              "name",
              "status",
              "productId"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Skus.Responses.SkuResponse"
              }
            ],
            "nullable": true
          },
          "requestId": {
            "type": "string"
          },
          "requester": {
            "type": "string"
          },
          "recipeId": {
            "type": "string",
            "nullable": true
          },
          "recipe": {
            "required": [
              "id",
              "externalReference",
              "name",
              "recipeId",
              "productId",
              "recipe",
              "status",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.RecipeVersions.Responses.VersionResponse"
              }
            ],
            "nullable": true
          },
          "plannedQuantity": {
            "type": "number",
            "format": "double"
          },
          "completedQuantity": {
            "type": "number",
            "format": "double"
          },
          "rejectedQuantity": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Orders.Enums.Status"
              }
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "targetedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "calculatedTargetedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stockStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StockStatus"
              }
            ]
          },
          "stockExpectedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDurationMinutes": {
            "type": "number",
            "format": "double"
          },
          "plannedManpowerMinutes": {
            "type": "number",
            "format": "double"
          },
          "completedMinutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "completedMinutesDuration": {
            "type": "number",
            "format": "double"
          },
          "realDurationMinutes": {
            "type": "number",
            "format": "double"
          },
          "realManpowerMinutes": {
            "type": "number",
            "format": "double"
          },
          "completionPercent": {
            "type": "number",
            "format": "double"
          },
          "efficiency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "manpowerEfficiency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Responses.OutputResponse": {
        "required": [
          "comments",
          "completedQuantity",
          "createdAt",
          "createdBy",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "rejectedQuantity"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "completedQuantity": {
            "type": "number",
            "format": "double"
          },
          "rejectedQuantity": {
            "type": "number",
            "format": "double"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Responses.RestrictionResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "externalReference",
          "from",
          "fromId",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "to",
          "toId",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "fromId": {
            "type": "string"
          },
          "from": {
            "required": [
              "id",
              "externalReference",
              "orderId",
              "order",
              "name",
              "lotNumber",
              "relativeAmount",
              "positionX",
              "positionY",
              "restrictedBy",
              "typeId",
              "type",
              "resourceId",
              "resource",
              "status",
              "stockStatus",
              "stockExpectedAt",
              "plannedQuantity",
              "completedQuantity",
              "plannedDurationMinutes",
              "plannedManpowerMinutes",
              "completedManpowerMinutes",
              "completedDurationMinutes",
              "realDurationMinutes",
              "realManpowerMinutes",
              "completionPercent",
              "efficiency",
              "manpowerEfficiency",
              "startedAt",
              "finishedAt",
              "targetedAt",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Orders.Responses.OperationResponse"
              }
            ],
            "nullable": true
          },
          "toId": {
            "type": "string"
          },
          "to": {
            "required": [
              "id",
              "externalReference",
              "orderId",
              "order",
              "name",
              "lotNumber",
              "relativeAmount",
              "positionX",
              "positionY",
              "restrictedBy",
              "typeId",
              "type",
              "resourceId",
              "resource",
              "status",
              "stockStatus",
              "stockExpectedAt",
              "plannedQuantity",
              "completedQuantity",
              "plannedDurationMinutes",
              "plannedManpowerMinutes",
              "completedManpowerMinutes",
              "completedDurationMinutes",
              "realDurationMinutes",
              "realManpowerMinutes",
              "completionPercent",
              "efficiency",
              "manpowerEfficiency",
              "startedAt",
              "finishedAt",
              "targetedAt",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Orders.Responses.OperationResponse"
              }
            ],
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.RestrictionType"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Orders.Responses.StepResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "externalReference",
          "frequency",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "minutesDuration",
          "minutesWorkload",
          "name",
          "notes",
          "type",
          "when"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepMoment"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepType"
              }
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Commands.Operation": {
        "required": [
          "earliestPossibleStart",
          "locked",
          "operationId",
          "resourceId",
          "startsAt"
        ],
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "startsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "earliestPossibleStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Requests.CreatePlanRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Requests.SolvePlanRequest": {
        "required": [
          "parallelOperations",
          "useRawMaterialRestrictions"
        ],
        "type": "object",
        "properties": {
          "useRawMaterialRestrictions": {
            "type": "boolean"
          },
          "parallelOperations": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Requests.UpdatePlanRequest": {
        "required": [
          "operations"
        ],
        "type": "object",
        "properties": {
          "operations": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Plans.Commands.Operation"
            }
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Responses.OperationResourceOptionResponse": {
        "required": [
          "minutes",
          "minutesPerUnit",
          "resourceId",
          "resourceUsage"
        ],
        "type": "object",
        "properties": {
          "resourceId": {
            "type": "string"
          },
          "resourceUsage": {
            "type": "number",
            "format": "double"
          },
          "minutes": {
            "type": "number",
            "format": "double"
          },
          "minutesPerUnit": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Responses.OperationResourceResponse": {
        "required": [
          "options",
          "selectedOption"
        ],
        "type": "object",
        "properties": {
          "selectedOption": {
            "required": [
              "resourceId",
              "resourceUsage",
              "minutes",
              "minutesPerUnit"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Plans.Responses.OperationResourceOptionResponse"
              }
            ],
            "nullable": true
          },
          "options": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Plans.Responses.OperationResourceOptionResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Responses.OperationResponse": {
        "required": [
          "dueAt",
          "earliestPossibleStart",
          "id",
          "locked",
          "lotNumber",
          "mainResource",
          "metadata",
          "operationName",
          "operationType",
          "orderId",
          "partialRestrictions",
          "productName",
          "quantity",
          "skuName",
          "startsAt",
          "totalRestrictions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "lotNumber": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "skuName": {
            "type": "string"
          },
          "operationName": {
            "type": "string"
          },
          "operationType": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "locked": {
            "type": "boolean"
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "earliestPossibleStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "mainResource": {
            "required": [
              "selectedOption",
              "options"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Plans.Responses.OperationResourceResponse"
              }
            ]
          },
          "totalRestrictions": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Plans.Responses.OperationRestrictionResponse"
            }
          },
          "partialRestrictions": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Plans.Responses.OperationRestrictionResponse"
            }
          },
          "metadata": {
            "required": [
              "comparer",
              "count",
              "keys",
              "values",
              "item"
            ],
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Responses.OperationRestrictionResponse": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Responses.PlanResponse": {
        "required": [
          "active",
          "createdAt",
          "endsAt",
          "externalReference",
          "id",
          "name",
          "obsolete",
          "operations",
          "resources",
          "schedule",
          "startsAt",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "startsAt": {
            "type": "string",
            "format": "date-time"
          },
          "endsAt": {
            "type": "string",
            "format": "date-time"
          },
          "active": {
            "type": "boolean"
          },
          "obsolete": {
            "type": "boolean"
          },
          "schedule": {
            "required": [
              "workingIntervals"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Plans.Responses.ScheduleResponse"
              }
            ],
            "nullable": true
          },
          "operations": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Plans.Responses.OperationResponse"
            }
          },
          "resources": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Plans.Responses.ResourceResponse"
            }
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Plans.Responses.SolutionStatus"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Responses.ResourceResponse": {
        "required": [
          "availableAmount",
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "availableAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Responses.ScheduleIntervalResponse": {
        "required": [
          "endsAt",
          "startsAt",
          "workable"
        ],
        "type": "object",
        "properties": {
          "startsAt": {
            "type": "string",
            "format": "date-time"
          },
          "endsAt": {
            "type": "string",
            "format": "date-time"
          },
          "workable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Responses.ScheduleResponse": {
        "required": [
          "workingIntervals"
        ],
        "type": "object",
        "properties": {
          "workingIntervals": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Plans.Responses.ScheduleIntervalResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "Production.Plans.Responses.SolutionStatus": {
        "enum": [
          "Pending",
          "Processing",
          "Succeeded",
          "Failed"
        ],
        "type": "string"
      },
      "Production.PresenceAssignments.Requests.AssignRequest": {
        "required": [
          "employeeReference"
        ],
        "type": "object",
        "properties": {
          "employeeReference": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.PresenceAssignments.Requests.UnassignRequest": {
        "required": [
          "employeeReference"
        ],
        "type": "object",
        "properties": {
          "employeeReference": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.PresenceAssignments.Responses.ActivePresenceAssignmentsResponse": {
        "required": [
          "groups",
          "resources"
        ],
        "type": "object",
        "properties": {
          "resources": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.PresenceAssignments.Responses.ResourceAssignmentResponse"
            }
          },
          "groups": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.PresenceAssignments.Responses.GroupAssignmentResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "Production.PresenceAssignments.Responses.GroupAssignmentResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "employee",
          "employeeId",
          "externalReference",
          "finishedAt",
          "group",
          "groupId",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "startedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string"
          },
          "group": {
            "required": [
              "id",
              "externalReference",
              "name",
              "description",
              "parentId",
              "parent",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.ResourceGroups.Responses.GroupResponse"
              }
            ],
            "nullable": true
          },
          "employeeId": {
            "type": "string"
          },
          "employee": {
            "required": [
              "id",
              "externalReference",
              "username",
              "active",
              "fullName",
              "firstName",
              "lastName",
              "emails",
              "createdBy",
              "createdAt",
              "lastModifiedBy",
              "lastModifiedAt"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Employees.Responses.EmployeeResponse"
              }
            ],
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.PresenceAssignments.Responses.ResourceAssignmentResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "employee",
          "employeeId",
          "externalReference",
          "finishedAt",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "resource",
          "resourceId",
          "startedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "string"
          },
          "resource": {
            "required": [
              "id",
              "externalReference",
              "name",
              "description",
              "groupId",
              "group",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Resources.Responses.ResourceResponse"
              }
            ],
            "nullable": true
          },
          "employeeId": {
            "type": "string"
          },
          "employee": {
            "required": [
              "id",
              "externalReference",
              "username",
              "active",
              "fullName",
              "firstName",
              "lastName",
              "emails",
              "createdBy",
              "createdAt",
              "lastModifiedBy",
              "lastModifiedAt"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Employees.Responses.EmployeeResponse"
              }
            ],
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Products.Responses.ProductResponse": {
        "required": [
          "code",
          "externalReference",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Enums.InputType": {
        "enum": [
          "RawMaterial",
          "Semifinished"
        ],
        "type": "string"
      },
      "Production.RecipeVersions.Enums.Status": {
        "enum": [
          "Editable",
          "Active",
          "Inactive"
        ],
        "type": "string"
      },
      "Production.RecipeVersions.Requests.AddActionStepRequest": {
        "required": [
          "name",
          "when"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepMoment"
              }
            ]
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.AddInputRequest": {
        "required": [
          "quantity",
          "skuReference",
          "when"
        ],
        "type": "object",
        "properties": {
          "skuReference": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.InputMoment"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.RecipeVersions.Requests.InputType"
              }
            ]
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.AddInspectionStepRequest": {
        "required": [
          "inspectionType",
          "name",
          "when"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepMoment"
              }
            ]
          },
          "inspectionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.InspectionType"
              }
            ]
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.AddOperationRequest": {
        "required": [
          "name",
          "operationTypeReference"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "operationTypeReference": {
            "type": "string"
          },
          "relativeAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.AddRestrictionRequest": {
        "required": [
          "fromReference",
          "toReference",
          "type"
        ],
        "type": "object",
        "properties": {
          "fromReference": {
            "type": "string"
          },
          "toReference": {
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.RestrictionType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.CopyVersionRequest": {
        "required": [
          "newName"
        ],
        "type": "object",
        "properties": {
          "newName": {
            "type": "string"
          },
          "destinationRecipeReference": {
            "type": "string",
            "nullable": true
          },
          "inputs": {
            "type": "boolean"
          },
          "steps": {
            "type": "boolean"
          },
          "restrictions": {
            "type": "boolean"
          },
          "conditions": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.CreateVersionRequest": {
        "required": [
          "name",
          "recipeReference"
        ],
        "type": "object",
        "properties": {
          "recipeReference": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.InputType": {
        "enum": [
          "RawMaterial",
          "Semifinished"
        ],
        "type": "string"
      },
      "Production.RecipeVersions.Requests.PartialMoveVersionRequest": {
        "required": [
          "destinationRecipeReference",
          "newVersionName"
        ],
        "type": "object",
        "properties": {
          "newVersionName": {
            "type": "string"
          },
          "destinationRecipeReference": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.UpdateActionStepRequest": {
        "required": [
          "minutesDuration",
          "minutesWorkload",
          "name",
          "when"
        ],
        "type": "object",
        "properties": {
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepMoment"
              }
            ]
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.UpdateInputFormulaRequest": {
        "type": "object",
        "properties": {
          "formula": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.UpdateInputRequest": {
        "required": [
          "quantity",
          "skuReference",
          "when"
        ],
        "type": "object",
        "properties": {
          "skuReference": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.InputMoment"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.RecipeVersions.Requests.InputType"
              }
            ]
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.UpdateInspectionStepRequest": {
        "required": [
          "inspectionType",
          "minutesDuration",
          "minutesWorkload",
          "name",
          "when"
        ],
        "type": "object",
        "properties": {
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepMoment"
              }
            ]
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "inspectionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.InspectionType"
              }
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.UpdateOperationFormulaRequest": {
        "type": "object",
        "properties": {
          "formula": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.UpdateOperationRequest": {
        "required": [
          "name",
          "operationTypeReference"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "operationTypeReference": {
            "type": "string"
          },
          "relativeAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "positionX": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "positionY": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.UpdateRestrictionRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.RestrictionType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.UpdateStepFormulaRequest": {
        "type": "object",
        "properties": {
          "formula": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Requests.UpdateVersionRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Responses.ActionStepResponse": {
        "required": [
          "conditionFormula",
          "createdAt",
          "createdBy",
          "executionOrder",
          "externalReference",
          "frequency",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "minutesDuration",
          "minutesWorkload",
          "name",
          "notes",
          "type",
          "when"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepMoment"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepType"
              }
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "executionOrder": {
            "type": "integer",
            "format": "int32"
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "conditionFormula": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Responses.InputResponse": {
        "required": [
          "conditionFormula",
          "createdAt",
          "createdBy",
          "externalReference",
          "frequency",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "quantity",
          "type",
          "when"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.RecipeVersions.Enums.InputType"
              }
            ]
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.InputMoment"
              }
            ]
          },
          "quantity": {
            "type": "string"
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "conditionFormula": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Responses.InspectionStepResponse": {
        "required": [
          "conditionFormula",
          "createdAt",
          "createdBy",
          "externalReference",
          "frequency",
          "id",
          "inspectionType",
          "lastModifiedAt",
          "lastModifiedBy",
          "minutesDuration",
          "minutesWorkload",
          "name",
          "notes",
          "type",
          "when"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepMoment"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepType"
              }
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "inspectionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.InspectionType"
              }
            ]
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "conditionFormula": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Responses.OperationResponse": {
        "required": [
          "conditionFormula",
          "createdAt",
          "createdBy",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name",
          "positionX",
          "positionY",
          "recipeVersionId",
          "relativeAmount",
          "restrictedBy",
          "type",
          "typeId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "recipeVersionId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "relativeAmount": {
            "type": "number",
            "format": "double"
          },
          "positionX": {
            "type": "number",
            "format": "double"
          },
          "positionY": {
            "type": "number",
            "format": "double"
          },
          "restrictedBy": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.RecipeVersions.Responses.RestrictionResponse"
            }
          },
          "typeId": {
            "type": "string"
          },
          "type": {
            "required": [
              "id",
              "externalReference",
              "name",
              "description",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.OperationTypes.Responses.OperationTypeResponse"
              }
            ],
            "nullable": true
          },
          "conditionFormula": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Responses.RawMaterialInputResponse": {
        "required": [
          "conditionFormula",
          "createdAt",
          "createdBy",
          "externalReference",
          "frequency",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "quantity",
          "sku",
          "skuId",
          "when"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Production.RecipeVersions.Responses.InputResponse"
          }
        ],
        "properties": {
          "skuId": {
            "type": "string"
          },
          "sku": {
            "required": [
              "id",
              "externalReference",
              "code",
              "name",
              "status",
              "productId"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Skus.Responses.SkuResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Responses.RestrictionResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "from",
          "fromId",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "to",
          "toId",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "fromId": {
            "type": "string"
          },
          "from": {
            "required": [
              "id",
              "externalReference",
              "recipeVersionId",
              "name",
              "relativeAmount",
              "positionX",
              "positionY",
              "restrictedBy",
              "typeId",
              "type",
              "conditionFormula",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.RecipeVersions.Responses.OperationResponse"
              }
            ],
            "nullable": true
          },
          "toId": {
            "type": "string"
          },
          "to": {
            "required": [
              "id",
              "externalReference",
              "recipeVersionId",
              "name",
              "relativeAmount",
              "positionX",
              "positionY",
              "restrictedBy",
              "typeId",
              "type",
              "conditionFormula",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.RecipeVersions.Responses.OperationResponse"
              }
            ],
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.RestrictionType"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Responses.SemifinishedInputResponse": {
        "required": [
          "conditionFormula",
          "createdAt",
          "createdBy",
          "externalReference",
          "frequency",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "product",
          "productId",
          "quantity",
          "when"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Production.RecipeVersions.Responses.InputResponse"
          }
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "product": {
            "required": [
              "id",
              "code",
              "name",
              "externalReference"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Products.Responses.ProductResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Responses.StepResponse": {
        "required": [
          "conditionFormula",
          "createdAt",
          "createdBy",
          "externalReference",
          "frequency",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "minutesDuration",
          "minutesWorkload",
          "name",
          "notes",
          "type",
          "when"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "when": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepMoment"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StepType"
              }
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "minutesWorkload": {
            "type": "number",
            "format": "double"
          },
          "minutesDuration": {
            "type": "number",
            "format": "double"
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "conditionFormula": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.RecipeVersions.Responses.VersionResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name",
          "productId",
          "recipe",
          "recipeId",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "recipeId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "recipe": {
            "required": [
              "id",
              "externalReference",
              "name",
              "productId",
              "product",
              "conditionFormula",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Recipes.Responses.RecipeResponse"
              }
            ],
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.RecipeVersions.Enums.Status"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Recipes.Requests.CreateRecipeRequest": {
        "required": [
          "name",
          "productReference"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "productReference": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Recipes.Requests.UpdateRecipeFormulaRequest": {
        "type": "object",
        "properties": {
          "formula": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Recipes.Requests.UpdateRecipeRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Recipes.Responses.RecipeResponse": {
        "required": [
          "conditionFormula",
          "createdAt",
          "createdBy",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name",
          "product",
          "productId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "product": {
            "required": [
              "id",
              "code",
              "name",
              "externalReference"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Products.Responses.ProductResponse"
              }
            ],
            "nullable": true
          },
          "conditionFormula": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Requests.Enums.Status": {
        "enum": [
          "Created",
          "PartiallyPlanned",
          "Planned",
          "OverPlanned",
          "Completed",
          "Cancelled"
        ],
        "type": "string"
      },
      "Production.Requests.Requests.CreateRequestRequest": {
        "required": [
          "requestedQuantity",
          "skuReference"
        ],
        "type": "object",
        "properties": {
          "requestedQuantity": {
            "type": "number",
            "format": "double"
          },
          "skuReference": {
            "type": "string"
          },
          "lotNumber": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "requester": {
            "type": "string",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Requests.Requests.UpdateRequestRequest": {
        "required": [
          "dueAt",
          "notes",
          "requestedQuantity",
          "requester",
          "skuReference"
        ],
        "type": "object",
        "properties": {
          "skuReference": {
            "type": "string"
          },
          "requester": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "requestedQuantity": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Production.Requests.Responses.InputResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "pendingQuantity",
          "sku",
          "skuId",
          "status",
          "stockExpectedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "skuId": {
            "type": "string"
          },
          "sku": {
            "required": [
              "id",
              "externalReference",
              "code",
              "name",
              "status",
              "productId"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Skus.Responses.SkuResponse"
              }
            ],
            "nullable": true
          },
          "pendingQuantity": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StockStatus"
              }
            ]
          },
          "stockExpectedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Requests.Responses.RequestResponse": {
        "required": [
          "cancelledAt",
          "completedQuantity",
          "createdAt",
          "createdBy",
          "dueAt",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "lotNumber",
          "notes",
          "plannedQuantity",
          "relatedId",
          "requestedQuantity",
          "requester",
          "sku",
          "skuId",
          "status",
          "stockStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "lotNumber": {
            "type": "string"
          },
          "requester": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "relatedId": {
            "type": "string",
            "nullable": true
          },
          "requestedQuantity": {
            "type": "number",
            "format": "double"
          },
          "plannedQuantity": {
            "type": "number",
            "format": "double"
          },
          "completedQuantity": {
            "type": "number",
            "format": "double"
          },
          "stockStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Common.Enums.StockStatus"
              }
            ]
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Requests.Enums.Status"
              }
            ]
          },
          "skuId": {
            "type": "string"
          },
          "sku": {
            "required": [
              "id",
              "externalReference",
              "code",
              "name",
              "status",
              "productId"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Skus.Responses.SkuResponse"
              }
            ],
            "nullable": true
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.ResourceGroups.Requests.CreateGroupRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "parentReference": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.ResourceGroups.Requests.UpdateGroupRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "parentReference": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.ResourceGroups.Responses.GroupResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "description",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name",
          "parent",
          "parentId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "required": [
              "id",
              "externalReference",
              "name",
              "description",
              "parentId",
              "parent",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.ResourceGroups.Responses.GroupResponse"
              }
            ],
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Resources.Requests.AddCapabilityRequest": {
        "required": [
          "efficiency"
        ],
        "type": "object",
        "properties": {
          "efficiency": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Production.Resources.Requests.CreateResourceRequest": {
        "required": [
          "groupReference",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "groupReference": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Resources.Requests.UpdateResourceRequest": {
        "required": [
          "groupReference",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "groupReference": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Resources.Responses.CapabilityResponse": {
        "required": [
          "efficiency",
          "id",
          "operationType",
          "operationTypeId",
          "resource",
          "resourceId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "operationTypeId": {
            "type": "string"
          },
          "operationType": {
            "required": [
              "id",
              "externalReference",
              "name",
              "description",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.OperationTypes.Responses.OperationTypeResponse"
              }
            ],
            "nullable": true
          },
          "resourceId": {
            "type": "string"
          },
          "resource": {
            "required": [
              "id",
              "externalReference",
              "name",
              "description",
              "groupId",
              "group",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Resources.Responses.ResourceResponse"
              }
            ],
            "nullable": true
          },
          "efficiency": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Production.Resources.Responses.ResourceResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "description",
          "externalReference",
          "group",
          "groupId",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string"
          },
          "group": {
            "required": [
              "id",
              "externalReference",
              "name",
              "description",
              "parentId",
              "parent",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.ResourceGroups.Responses.GroupResponse"
              }
            ],
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Schedules.Commands.Shift": {
        "required": [
          "dayOfWeek",
          "endsAt",
          "startsAt"
        ],
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.DayOfWeek"
              }
            ]
          },
          "startsAt": {
            "type": "string"
          },
          "endsAt": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Production.Schedules.Requests.UpdateScheduleRequest": {
        "required": [
          "offsetMinutes",
          "shifts"
        ],
        "type": "object",
        "properties": {
          "shifts": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Schedules.Commands.Shift"
            }
          },
          "offsetMinutes": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Production.Schedules.Responses.ScheduleResponse": {
        "required": [
          "shifts",
          "totalWorkingMinutes"
        ],
        "type": "object",
        "properties": {
          "totalWorkingMinutes": {
            "type": "number",
            "format": "double"
          },
          "shifts": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Schedules.Responses.ShiftResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "Production.Schedules.Responses.ShiftResponse": {
        "required": [
          "dayOfWeek",
          "endsAt",
          "offsetMinutes",
          "startsAt"
        ],
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.DayOfWeek"
              }
            ]
          },
          "startsAt": {
            "type": "string",
            "format": "time"
          },
          "endsAt": {
            "type": "string",
            "format": "time"
          },
          "offsetMinutes": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Production.Skus.Responses.MissingInputResponse": {
        "required": [
          "product",
          "productId",
          "values"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "product": {
            "required": [
              "id",
              "code",
              "name",
              "externalReference"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Production.Products.Responses.ProductResponse"
              }
            ]
          },
          "values": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Production.Skus.Responses.SkuValueResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "Production.Skus.Responses.RequiredInputResponse": {
        "required": [
          "quantity",
          "skuId"
        ],
        "type": "object",
        "properties": {
          "skuId": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Production.Skus.Responses.SkuResponse": {
        "required": [
          "code",
          "externalReference",
          "id",
          "name",
          "productId",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Production.Skus.Responses.SkuValueResponse": {
        "required": [
          "displayValue",
          "propertyId",
          "propertyName",
          "value"
        ],
        "type": "object",
        "properties": {
          "propertyId": {
            "type": "string"
          },
          "propertyName": {
            "type": "string"
          },
          "displayValue": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "System.DayOfWeek": {
        "enum": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "type": "string"
      },
      "System.Net.HttpStatusCode": {
        "enum": [
          "Continue",
          "SwitchingProtocols",
          "Processing",
          "EarlyHints",
          "OK",
          "Created",
          "Accepted",
          "NonAuthoritativeInformation",
          "NoContent",
          "ResetContent",
          "PartialContent",
          "MultiStatus",
          "AlreadyReported",
          "IMUsed",
          "MultipleChoices",
          "MovedPermanently",
          "Found",
          "SeeOther",
          "NotModified",
          "UseProxy",
          "Unused",
          "TemporaryRedirect",
          "PermanentRedirect",
          "BadRequest",
          "Unauthorized",
          "PaymentRequired",
          "Forbidden",
          "NotFound",
          "MethodNotAllowed",
          "NotAcceptable",
          "ProxyAuthenticationRequired",
          "RequestTimeout",
          "Conflict",
          "Gone",
          "LengthRequired",
          "PreconditionFailed",
          "RequestEntityTooLarge",
          "RequestUriTooLong",
          "UnsupportedMediaType",
          "RequestedRangeNotSatisfiable",
          "ExpectationFailed",
          "MisdirectedRequest",
          "UnprocessableEntity",
          "Locked",
          "FailedDependency",
          "UpgradeRequired",
          "PreconditionRequired",
          "TooManyRequests",
          "RequestHeaderFieldsTooLarge",
          "UnavailableForLegalReasons",
          "InternalServerError",
          "NotImplemented",
          "BadGateway",
          "ServiceUnavailable",
          "GatewayTimeout",
          "HttpVersionNotSupported",
          "VariantAlsoNegotiates",
          "InsufficientStorage",
          "LoopDetected",
          "NotExtended",
          "NetworkAuthenticationRequired"
        ],
        "type": "string"
      },
      "Users.Requests.AddUserRequest": {
        "required": [
          "displayName",
          "email",
          "firstName"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Users.Responses.UserResponse": {
        "required": [
          "active",
          "displayName",
          "email",
          "firstName",
          "id",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Users.Responses.UserWithRolesResponse": {
        "required": [
          "roles",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "required": [
              "id",
              "displayName",
              "firstName",
              "lastName",
              "email",
              "active"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Users.Responses.UserResponse"
              }
            ]
          },
          "roles": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Locations.Requests.CreateLocationRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Locations.Requests.UpdateLocationRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Locations.Responses.LocationResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Receipts.Commands.RelatedType": {
        "enum": [
          "Nothing",
          "PurchaseOrderLine"
        ],
        "type": "string"
      },
      "Warehouse.Receipts.Enums.LineType": {
        "enum": [
          "PurchaseOrderLine"
        ],
        "type": "string"
      },
      "Warehouse.Receipts.Enums.ReceiptType": {
        "enum": [
          "PurchaseOrder"
        ],
        "type": "string"
      },
      "Warehouse.Receipts.Requests.AddReceiptLineRequest": {
        "required": [
          "quantity",
          "relatedReference",
          "skuReference"
        ],
        "type": "object",
        "properties": {
          "relatedReference": {
            "type": "string"
          },
          "skuReference": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "relatedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Receipts.Commands.RelatedType"
              }
            ]
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "lotNumber": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Receipts.Requests.CreateReceiptRequest": {
        "required": [
          "locationReference"
        ],
        "type": "object",
        "properties": {
          "locationReference": {
            "type": "string",
            "nullable": true
          },
          "originReference": {
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Receipts.Enums.ReceiptType"
              }
            ]
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Receipts.Requests.UpdateReceiptRequest": {
        "required": [
          "code",
          "date",
          "locationReference"
        ],
        "type": "object",
        "properties": {
          "locationReference": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Receipts.Responses.ReceiptLineResponse": {
        "required": [
          "externalReference",
          "id",
          "quantity",
          "relatedId",
          "sku",
          "skuId",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "relatedId": {
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Receipts.Enums.LineType"
              }
            ]
          },
          "skuId": {
            "type": "string"
          },
          "sku": {
            "required": [
              "id",
              "code",
              "externalReference",
              "name",
              "stock"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Skus.Responses.SkuResponse"
              }
            ],
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Receipts.Responses.ReceiptResponse": {
        "required": [
          "code",
          "createdAt",
          "createdBy",
          "date",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "location",
          "locationId",
          "origin",
          "originId",
          "received",
          "receivedAt",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "origin": {
            "type": "string"
          },
          "originId": {
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Receipts.Enums.ReceiptType"
              }
            ]
          },
          "code": {
            "type": "string"
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "required": [
              "id",
              "externalReference",
              "name",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Locations.Responses.LocationResponse"
              }
            ],
            "nullable": true
          },
          "received": {
            "type": "boolean"
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Shipments.Enums.LineType": {
        "enum": [
          "SalesOrderLine",
          "Unknown"
        ],
        "type": "string"
      },
      "Warehouse.Shipments.Enums.ShipmentType": {
        "enum": [
          "SalesOrder"
        ],
        "type": "string"
      },
      "Warehouse.Shipments.Requests.AddShipmentLineRequest": {
        "required": [
          "quantity",
          "relatedReference",
          "skuReference"
        ],
        "type": "object",
        "properties": {
          "relatedReference": {
            "type": "string"
          },
          "skuReference": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "relatedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Shipments.Enums.LineType"
              }
            ]
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "lotNumber": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Shipments.Requests.CreateShipmentRequest": {
        "required": [
          "locationReference"
        ],
        "type": "object",
        "properties": {
          "locationReference": {
            "type": "string",
            "nullable": true
          },
          "destinationReference": {
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Shipments.Enums.ShipmentType"
              }
            ]
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Shipments.Requests.UpdateShipmentRequest": {
        "required": [
          "code",
          "date",
          "locationReference"
        ],
        "type": "object",
        "properties": {
          "locationReference": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Shipments.Responses.ShipmentLineResponse": {
        "required": [
          "externalReference",
          "id",
          "quantity",
          "relatedId",
          "sku",
          "skuId",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "relatedId": {
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Shipments.Enums.LineType"
              }
            ]
          },
          "skuId": {
            "type": "string"
          },
          "sku": {
            "required": [
              "id",
              "code",
              "externalReference",
              "name",
              "stock"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Skus.Responses.SkuResponse"
              }
            ],
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Shipments.Responses.ShipmentResponse": {
        "required": [
          "code",
          "createdAt",
          "createdBy",
          "date",
          "destination",
          "destinationId",
          "externalReference",
          "id",
          "lastModifiedAt",
          "lastModifiedBy",
          "location",
          "locationId",
          "shipped",
          "shippedAt",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "destination": {
            "type": "string"
          },
          "destinationId": {
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Shipments.Enums.ShipmentType"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "code": {
            "type": "string"
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "required": [
              "id",
              "externalReference",
              "name",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Locations.Responses.LocationResponse"
              }
            ],
            "nullable": true
          },
          "shipped": {
            "type": "boolean"
          },
          "shippedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Skus.Requests.AdjustSkuStockRequest": {
        "required": [
          "locationReference",
          "lotNumber",
          "stock"
        ],
        "type": "object",
        "properties": {
          "locationReference": {
            "type": "string"
          },
          "stock": {
            "type": "number",
            "format": "double"
          },
          "lotNumber": {
            "type": "string"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Skus.Responses.SkuHistoryResponse": {
        "required": [
          "history",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "history": {
            "required": [
              "capacity",
              "count",
              "item"
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warehouse.Skus.Responses.StockChangeResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Skus.Responses.SkuResponse": {
        "required": [
          "code",
          "externalReference",
          "id",
          "name",
          "stock"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "stock": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Skus.Responses.StockChangeResponse": {
        "required": [
          "amount",
          "changeType",
          "comment",
          "location",
          "lotNumber",
          "occurredOn",
          "stockAfterChange"
        ],
        "type": "object",
        "properties": {
          "location": {
            "required": [
              "id",
              "externalReference",
              "name",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Locations.Responses.LocationResponse"
              }
            ]
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "stockAfterChange": {
            "type": "number",
            "format": "double"
          },
          "occurredOn": {
            "type": "string",
            "format": "date-time"
          },
          "changeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Skus.Responses.StockChangeType"
              }
            ]
          },
          "lotNumber": {
            "type": "string"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Skus.Responses.StockChangeType": {
        "enum": [
          "ShipmentShipped",
          "ShipmentReversed",
          "ReceiptReceived",
          "ReceiptReversed",
          "OrderProgressed",
          "OrderReversed",
          "InputConsumed",
          "InputReversed",
          "ManualCount",
          "SkuMerged"
        ],
        "type": "string"
      },
      "Warehouse.Skus.Responses.StockUnitResponse": {
        "required": [
          "amount",
          "location",
          "locationId",
          "lotNumber"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string"
          },
          "location": {
            "required": [
              "id",
              "externalReference",
              "name",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Locations.Responses.LocationResponse"
              }
            ],
            "nullable": true
          },
          "lotNumber": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Workstations.Requests.UpdateWorkstationLocationRequest": {
        "required": [
          "locationReference"
        ],
        "type": "object",
        "properties": {
          "locationReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Warehouse.Workstations.Responses.WorkstationResponse": {
        "required": [
          "externalReference",
          "id",
          "location",
          "locationId",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "required": [
              "id",
              "externalReference",
              "name",
              "createdAt",
              "createdBy",
              "lastModifiedAt",
              "lastModifiedBy"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse.Locations.Responses.LocationResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Customers",
      "description": "A customer of the company"
    },
    {
      "name": "Employees",
      "description": "An employee capable of performing production actions"
    },
    {
      "name": "Events",
      "description": "A system event that can be subscribed to"
    },
    {
      "name": "Files",
      "description": "Files hosted in the cloud for access within the app"
    },
    {
      "name": "Interruption Types",
      "description": "An interruption type is used to define common causes of all interruptions."
    },
    {
      "name": "Labels",
      "description": "Printable labels for specific entities"
    },
    {
      "name": "Notifications",
      "description": "Notifications that are created based on system events"
    },
    {
      "name": "Operation Assignments",
      "description": "The assignments of a specific operation for a concrete production order"
    },
    {
      "name": "Operation Inputs",
      "description": "The inputs of a specific operation for a concrete production order"
    },
    {
      "name": "Operation Interruptions",
      "description": "The interruptions of a specific operation for a concrete production order"
    },
    {
      "name": "Operation Outputs",
      "description": "The outputs of a specific operation for a concrete production order"
    },
    {
      "name": "Operation Restrictions",
      "description": "The relationships of precedence between different operations"
    },
    {
      "name": "Operation Steps",
      "description": "The steps of a specific operation for a concrete production order"
    },
    {
      "name": "Operation Types",
      "description": "An operation type serves as an abstraction over many operations so that machines can be set up more easily."
    },
    {
      "name": "Operations",
      "description": "The operations of a specific production order"
    },
    {
      "name": "Plans",
      "description": "A detailed view on the order of execution of operations"
    },
    {
      "name": "Presence Records",
      "description": "The people that is or has been assigned to a specific resource or resource group"
    },
    {
      "name": "Product Properties",
      "description": "Which specific properties apply to a specific product _(i.e. for the pencil: Color, Size, Hardness)_"
    },
    {
      "name": "Production Orders",
      "description": "An order to manufacture one or many units of a given SKU"
    },
    {
      "name": "Products",
      "description": "Generic definitions for an object or product _(i.e. Pencil)_"
    },
    {
      "name": "Properties",
      "description": "A global definition of all the characteristics that make sense in your business domain _(i.e. Width, Height, Color, Size, Material, Hardness)_"
    },
    {
      "name": "Property Options",
      "description": "For properties of type enumeration, these are all the possible values _(i.e. for the material property: Wood, Metal, Plastic)_"
    },
    {
      "name": "Purchase Orders",
      "description": "A purchase order, containing one or many lines for a specific supplier"
    },
    {
      "name": "Receipts",
      "description": "A group of SKUs that is being sent out of the factory as a bundle"
    },
    {
      "name": "Recipe Operation Inputs",
      "description": "The inputs of a specific operation"
    },
    {
      "name": "Recipe Operation Restrictions",
      "description": "The relationships of precedence between different operations"
    },
    {
      "name": "Recipe Operation Steps",
      "description": "The steps of a specific operation"
    },
    {
      "name": "Recipe Operations",
      "description": "The operations of a specific recipe version"
    },
    {
      "name": "Recipe Versions",
      "description": "A version of a recipe, that is a way of manufacturing a product in a specific moment in time"
    },
    {
      "name": "Recipes",
      "description": "A way of manufacturing a specific product"
    },
    {
      "name": "Reports",
      "description": "A PowerBI report"
    },
    {
      "name": "Requests",
      "description": "A request to manufacture a determined amount of units of a given SKU"
    },
    {
      "name": "Resource Groups",
      "description": "A resource group is a way of grouping your resources together, usually by physical location. You can have many layers of groups."
    },
    {
      "name": "Resources",
      "description": "All machinery or elements that you use for manufacturing products"
    },
    {
      "name": "Sales Orders",
      "description": "A sales order, containing one or many lines for a specific customer"
    },
    {
      "name": "Schedules",
      "description": "The working hours of the factory"
    },
    {
      "name": "Search",
      "description": "Get API keys to search"
    },
    {
      "name": "Shipments",
      "description": "A group of SKUs that is being sent out of the factory as a bundle"
    },
    {
      "name": "SKUs",
      "description": "Specific versions of an item that may differ from other versions in some of its properties _(i.e. a small black pencil)_"
    },
    {
      "name": "Subscriptions",
      "description": "A way to receive notifications when system events happen"
    },
    {
      "name": "Suppliers",
      "description": "A supplier of goods"
    },
    {
      "name": "Users",
      "description": "Users of the application"
    },
    {
      "name": "Warehouse Locations",
      "description": "A physical location within the warehouse"
    }
  ]
}